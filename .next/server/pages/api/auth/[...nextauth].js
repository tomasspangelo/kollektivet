/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "./lib/prisma.js":
/*!***********************!*\
  !*** ./lib/prisma.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nlet prisma;\n\nif (true) {\n  if (false) {} else {\n    if (!global.prisma) {\n      global.prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n    }\n\n    prisma = global.prisma;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvcHJpc21hLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsSUFBSUUsTUFBSjs7QUFFQSxJQUFJLE1BQStCO0FBQ2pDLGFBQTJDLEVBQTNDLE1BRU87QUFDTCxRQUFJLENBQUNDLE1BQU0sQ0FBQ0QsTUFBWixFQUFvQjtBQUNsQkMsTUFBQUEsTUFBTSxDQUFDRCxNQUFQLEdBQWdCLElBQUlELHdEQUFKLEVBQWhCO0FBQ0Q7O0FBRURDLElBQUFBLE1BQU0sR0FBR0MsTUFBTSxDQUFDRCxNQUFoQjtBQUNEO0FBQ0Y7O0FBRUQsaUVBQWVBLE1BQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rb2xsZWt0aXZldC8uL2xpYi9wcmlzbWEuanM/YzU2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWEsIFByaXNtYUNsaWVudCB9IGZyb20gXCJAcHJpc21hL2NsaWVudFwiO1xubGV0IHByaXNtYTtcblxuaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIikge1xuICAgIHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIWdsb2JhbC5wcmlzbWEpIHtcbiAgICAgIGdsb2JhbC5wcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XG4gICAgfVxuXG4gICAgcHJpc21hID0gZ2xvYmFsLnByaXNtYTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBwcmlzbWE7XG4iXSwibmFtZXMiOlsiUHJpc21hIiwiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiZ2xvYmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/prisma.js\n");

/***/ }),

/***/ "./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next */ \"next\");\n/* harmony import */ var next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers */ \"next-auth/providers\");\n/* harmony import */ var next_auth_providers__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_auth_adapters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/adapters */ \"next-auth/adapters\");\n/* harmony import */ var next_auth_adapters__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_adapters__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/prisma */ \"./lib/prisma.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/api-utils */ \"./node_modules/next/dist/server/api-utils.js\");\n\n\n\n\n\n\n\nconst authHandler = (req, res) => next_auth__WEBPACK_IMPORTED_MODULE_1___default()(req, res, options);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (authHandler);\nconst options = {\n  providers: [next_auth_providers__WEBPACK_IMPORTED_MODULE_2___default().GitHub({\n    clientId: process.env.GITHUB_ID,\n    clientSecret: process.env.GITHUB_SECRET\n  })],\n  adapter: next_auth_adapters__WEBPACK_IMPORTED_MODULE_3___default().Prisma.Adapter({\n    prisma: _lib_prisma__WEBPACK_IMPORTED_MODULE_4__.default\n  }),\n  secret: process.env.SECRET,\n  callbacks: {\n    session: async (session, user, _sessionToken) => {\n      session.user.id = user.id;\n      session.user.kollektivId = user.kollektivId;\n      return Promise.resolve(session);\n    },\n\n    async redirect(url, baseUrl) {\n      return baseUrl;\n    }\n\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1NLFdBQVcsR0FBRyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBY1AsZ0RBQVEsQ0FBQ00sR0FBRCxFQUFNQyxHQUFOLEVBQVdDLE9BQVgsQ0FBMUM7O0FBQ0EsaUVBQWVILFdBQWY7QUFFQSxNQUFNRyxPQUFPLEdBQUc7QUFDZEMsRUFBQUEsU0FBUyxFQUFFLENBQ1RSLGlFQUFBLENBQWlCO0FBQ2ZVLElBQUFBLFFBQVEsRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBRFA7QUFFZkMsSUFBQUEsWUFBWSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUc7QUFGWCxHQUFqQixDQURTLENBREc7QUFPZEMsRUFBQUEsT0FBTyxFQUFFZix3RUFBQSxDQUF3QjtBQUFFQyxJQUFBQSxNQUFNQSxrREFBQUE7QUFBUixHQUF4QixDQVBLO0FBUWRpQixFQUFBQSxNQUFNLEVBQUVSLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxNQVJOO0FBU2RDLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxPQUFPLEVBQUUsT0FBT0EsT0FBUCxFQUFnQkMsSUFBaEIsRUFBc0JDLGFBQXRCLEtBQXdDO0FBQy9DRixNQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYUUsRUFBYixHQUFrQkYsSUFBSSxDQUFDRSxFQUF2QjtBQUNBSCxNQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYUcsV0FBYixHQUEyQkgsSUFBSSxDQUFDRyxXQUFoQztBQUNBLGFBQU9DLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQk4sT0FBaEIsQ0FBUDtBQUNELEtBTFE7O0FBTVQsVUFBTW5CLFFBQU4sQ0FBZTBCLEdBQWYsRUFBb0JDLE9BQXBCLEVBQTZCO0FBQzNCLGFBQU9BLE9BQVA7QUFDRDs7QUFSUTtBQVRHLENBQWhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va29sbGVrdGl2ZXQvLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLmpzPzk5MDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaUhhbmRsZXIgfSBmcm9tIFwibmV4dFwiO1xuaW1wb3J0IE5leHRBdXRoIGZyb20gXCJuZXh0LWF1dGhcIjtcbmltcG9ydCBQcm92aWRlcnMgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnNcIjtcbmltcG9ydCBBZGFwdGVycyBmcm9tIFwibmV4dC1hdXRoL2FkYXB0ZXJzXCI7XG5pbXBvcnQgcHJpc21hIGZyb20gXCIuLi8uLi8uLi9saWIvcHJpc21hXCI7XG5pbXBvcnQgeyByZWRpcmVjdCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwaS11dGlsc1wiO1xuXG5jb25zdCBhdXRoSGFuZGxlciA9IChyZXEsIHJlcykgPT4gTmV4dEF1dGgocmVxLCByZXMsIG9wdGlvbnMpO1xuZXhwb3J0IGRlZmF1bHQgYXV0aEhhbmRsZXI7XG5cbmNvbnN0IG9wdGlvbnMgPSB7XG4gIHByb3ZpZGVyczogW1xuICAgIFByb3ZpZGVycy5HaXRIdWIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkdJVEhVQl9JRCxcbiAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuR0lUSFVCX1NFQ1JFVCxcbiAgICB9KSxcbiAgXSxcbiAgYWRhcHRlcjogQWRhcHRlcnMuUHJpc21hLkFkYXB0ZXIoeyBwcmlzbWEgfSksXG4gIHNlY3JldDogcHJvY2Vzcy5lbnYuU0VDUkVULFxuICBjYWxsYmFja3M6IHtcbiAgICBzZXNzaW9uOiBhc3luYyAoc2Vzc2lvbiwgdXNlciwgX3Nlc3Npb25Ub2tlbikgPT4ge1xuICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdXNlci5pZDtcbiAgICAgIHNlc3Npb24udXNlci5rb2xsZWt0aXZJZCA9IHVzZXIua29sbGVrdGl2SWQ7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHNlc3Npb24pO1xuICAgIH0sXG4gICAgYXN5bmMgcmVkaXJlY3QodXJsLCBiYXNlVXJsKSB7XG4gICAgICByZXR1cm4gYmFzZVVybDtcbiAgICB9LFxuICB9LFxufTtcbiJdLCJuYW1lcyI6WyJOZXh0QXBpSGFuZGxlciIsIk5leHRBdXRoIiwiUHJvdmlkZXJzIiwiQWRhcHRlcnMiLCJwcmlzbWEiLCJyZWRpcmVjdCIsImF1dGhIYW5kbGVyIiwicmVxIiwicmVzIiwib3B0aW9ucyIsInByb3ZpZGVycyIsIkdpdEh1YiIsImNsaWVudElkIiwicHJvY2VzcyIsImVudiIsIkdJVEhVQl9JRCIsImNsaWVudFNlY3JldCIsIkdJVEhVQl9TRUNSRVQiLCJhZGFwdGVyIiwiUHJpc21hIiwiQWRhcHRlciIsInNlY3JldCIsIlNFQ1JFVCIsImNhbGxiYWNrcyIsInNlc3Npb24iLCJ1c2VyIiwiX3Nlc3Npb25Ub2tlbiIsImlkIiwia29sbGVrdGl2SWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInVybCIsImJhc2VVcmwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/content-type/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/compiled/content-type/index.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("module.exports=(()=>{\"use strict\";var e={899:(e,r)=>{var t=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g;var a=/^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/;var n=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;var i=/\\\\([\\u000b\\u0020-\\u00ff])/g;var o=/([\\\\\"])/g;var u=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;r.format=format;r.parse=parse;function format(e){if(!e||typeof e!==\"object\"){throw new TypeError(\"argument obj is required\")}var r=e.parameters;var t=e.type;if(!t||!u.test(t)){throw new TypeError(\"invalid type\")}var a=t;if(r&&typeof r===\"object\"){var i;var o=Object.keys(r).sort();for(var f=0;f<o.length;f++){i=o[f];if(!n.test(i)){throw new TypeError(\"invalid parameter name\")}a+=\"; \"+i+\"=\"+qstring(r[i])}}return a}function parse(e){if(!e){throw new TypeError(\"argument string is required\")}var r=typeof e===\"object\"?getcontenttype(e):e;if(typeof r!==\"string\"){throw new TypeError(\"argument string is required to be a string\")}var a=r.indexOf(\";\");var n=a!==-1?r.substr(0,a).trim():r.trim();if(!u.test(n)){throw new TypeError(\"invalid media type\")}var o=new ContentType(n.toLowerCase());if(a!==-1){var f;var p;var s;t.lastIndex=a;while(p=t.exec(r)){if(p.index!==a){throw new TypeError(\"invalid parameter format\")}a+=p[0].length;f=p[1].toLowerCase();s=p[2];if(s[0]==='\"'){s=s.substr(1,s.length-2).replace(i,\"$1\")}o.parameters[f]=s}if(a!==r.length){throw new TypeError(\"invalid parameter format\")}}return o}function getcontenttype(e){var r;if(typeof e.getHeader===\"function\"){r=e.getHeader(\"content-type\")}else if(typeof e.headers===\"object\"){r=e.headers&&e.headers[\"content-type\"]}if(typeof r!==\"string\"){throw new TypeError(\"content-type header is missing from object\")}return r}function qstring(e){var r=String(e);if(n.test(r)){return r}if(r.length>0&&!a.test(r)){throw new TypeError(\"invalid parameter value\")}return'\"'+r.replace(o,\"\\\\$1\")+'\"'}function ContentType(e){this.parameters=Object.create(null);this.type=e}}};var r={};function __nccwpck_require__(t){if(r[t]){return r[t].exports}var a=r[t]={exports:{}};var n=true;try{e[t](a,a.exports,__nccwpck_require__);n=false}finally{if(n)delete r[t]}return a.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(899)})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2NvbnRlbnQtdHlwZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsYUFBYSxPQUFPLFlBQVksU0FBUyxnS0FBZ0ssOENBQThDLHNDQUFzQyxtQ0FBbUMsaUJBQWlCLG1FQUFtRSxnQkFBZ0IsY0FBYyxtQkFBbUIsNEJBQTRCLGdEQUFnRCxtQkFBbUIsYUFBYSxtQkFBbUIsb0NBQW9DLFFBQVEsMkJBQTJCLE1BQU0sNEJBQTRCLFlBQVksV0FBVyxLQUFLLE9BQU8sZUFBZSw4Q0FBOEMsTUFBTSx1QkFBdUIsU0FBUyxrQkFBa0IsT0FBTyxtREFBbUQsOENBQThDLHdCQUF3QixrRUFBa0Usa0JBQWtCLEdBQUcsMkNBQTJDLGVBQWUsMENBQTBDLHVDQUF1QyxXQUFXLE1BQU0sTUFBTSxNQUFNLGNBQWMsbUJBQW1CLGdCQUFnQixnREFBZ0QsZUFBZSxxQkFBcUIsT0FBTyxlQUFlLHlDQUF5QyxrQkFBa0IsaUJBQWlCLGlEQUFpRCxTQUFTLDJCQUEyQixNQUFNLG9DQUFvQyw4QkFBOEIscUNBQXFDLHVDQUF1Qyx3QkFBd0Isa0VBQWtFLFNBQVMsb0JBQW9CLGdCQUFnQixjQUFjLFNBQVMsMkJBQTJCLCtDQUErQyxrQ0FBa0Msd0JBQXdCLG9DQUFvQyxlQUFlLFNBQVMsZ0NBQWdDLFNBQVMsb0JBQW9CLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLHFDQUFxQyxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rb2xsZWt0aXZldC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY29udGVudC10eXBlL2luZGV4LmpzPzgzYTAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9KCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezg5OTooZSxyKT0+e3ZhciB0PS87ICooWyEjJCUmJyorLl5fYHx+MC05QS1aYS16LV0rKSAqPSAqKFwiKD86W1xcdTAwMGJcXHUwMDIwXFx1MDAyMVxcdTAwMjMtXFx1MDA1YlxcdTAwNWQtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl18XFxcXFtcXHUwMDBiXFx1MDAyMC1cXHUwMGZmXSkqXCJ8WyEjJCUmJyorLl5fYHx+MC05QS1aYS16LV0rKSAqL2c7dmFyIGE9L15bXFx1MDAwYlxcdTAwMjAtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl0rJC87dmFyIG49L15bISMkJSYnKisuXl9gfH4wLTlBLVphLXotXSskLzt2YXIgaT0vXFxcXChbXFx1MDAwYlxcdTAwMjAtXFx1MDBmZl0pL2c7dmFyIG89LyhbXFxcXFwiXSkvZzt2YXIgdT0vXlshIyQlJicqKy5eX2B8fjAtOUEtWmEtei1dK1xcL1shIyQlJicqKy5eX2B8fjAtOUEtWmEtei1dKyQvO3IuZm9ybWF0PWZvcm1hdDtyLnBhcnNlPXBhcnNlO2Z1bmN0aW9uIGZvcm1hdChlKXtpZighZXx8dHlwZW9mIGUhPT1cIm9iamVjdFwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgb2JqIGlzIHJlcXVpcmVkXCIpfXZhciByPWUucGFyYW1ldGVyczt2YXIgdD1lLnR5cGU7aWYoIXR8fCF1LnRlc3QodCkpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHR5cGVcIil9dmFyIGE9dDtpZihyJiZ0eXBlb2Ygcj09PVwib2JqZWN0XCIpe3ZhciBpO3ZhciBvPU9iamVjdC5rZXlzKHIpLnNvcnQoKTtmb3IodmFyIGY9MDtmPG8ubGVuZ3RoO2YrKyl7aT1vW2ZdO2lmKCFuLnRlc3QoaSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHBhcmFtZXRlciBuYW1lXCIpfWErPVwiOyBcIitpK1wiPVwiK3FzdHJpbmcocltpXSl9fXJldHVybiBhfWZ1bmN0aW9uIHBhcnNlKGUpe2lmKCFlKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgc3RyaW5nIGlzIHJlcXVpcmVkXCIpfXZhciByPXR5cGVvZiBlPT09XCJvYmplY3RcIj9nZXRjb250ZW50dHlwZShlKTplO2lmKHR5cGVvZiByIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHN0cmluZyBpcyByZXF1aXJlZCB0byBiZSBhIHN0cmluZ1wiKX12YXIgYT1yLmluZGV4T2YoXCI7XCIpO3ZhciBuPWEhPT0tMT9yLnN1YnN0cigwLGEpLnRyaW0oKTpyLnRyaW0oKTtpZighdS50ZXN0KG4pKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBtZWRpYSB0eXBlXCIpfXZhciBvPW5ldyBDb250ZW50VHlwZShuLnRvTG93ZXJDYXNlKCkpO2lmKGEhPT0tMSl7dmFyIGY7dmFyIHA7dmFyIHM7dC5sYXN0SW5kZXg9YTt3aGlsZShwPXQuZXhlYyhyKSl7aWYocC5pbmRleCE9PWEpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHBhcmFtZXRlciBmb3JtYXRcIil9YSs9cFswXS5sZW5ndGg7Zj1wWzFdLnRvTG93ZXJDYXNlKCk7cz1wWzJdO2lmKHNbMF09PT0nXCInKXtzPXMuc3Vic3RyKDEscy5sZW5ndGgtMikucmVwbGFjZShpLFwiJDFcIil9by5wYXJhbWV0ZXJzW2ZdPXN9aWYoYSE9PXIubGVuZ3RoKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBwYXJhbWV0ZXIgZm9ybWF0XCIpfX1yZXR1cm4gb31mdW5jdGlvbiBnZXRjb250ZW50dHlwZShlKXt2YXIgcjtpZih0eXBlb2YgZS5nZXRIZWFkZXI9PT1cImZ1bmN0aW9uXCIpe3I9ZS5nZXRIZWFkZXIoXCJjb250ZW50LXR5cGVcIil9ZWxzZSBpZih0eXBlb2YgZS5oZWFkZXJzPT09XCJvYmplY3RcIil7cj1lLmhlYWRlcnMmJmUuaGVhZGVyc1tcImNvbnRlbnQtdHlwZVwiXX1pZih0eXBlb2YgciE9PVwic3RyaW5nXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJjb250ZW50LXR5cGUgaGVhZGVyIGlzIG1pc3NpbmcgZnJvbSBvYmplY3RcIil9cmV0dXJuIHJ9ZnVuY3Rpb24gcXN0cmluZyhlKXt2YXIgcj1TdHJpbmcoZSk7aWYobi50ZXN0KHIpKXtyZXR1cm4gcn1pZihyLmxlbmd0aD4wJiYhYS50ZXN0KHIpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBwYXJhbWV0ZXIgdmFsdWVcIil9cmV0dXJuJ1wiJytyLnJlcGxhY2UobyxcIlxcXFwkMVwiKSsnXCInfWZ1bmN0aW9uIENvbnRlbnRUeXBlKGUpe3RoaXMucGFyYW1ldGVycz1PYmplY3QuY3JlYXRlKG51bGwpO3RoaXMudHlwZT1lfX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18odCl7aWYoclt0XSl7cmV0dXJuIHJbdF0uZXhwb3J0c312YXIgYT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgbj10cnVlO3RyeXtlW3RdKGEsYS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO249ZmFsc2V9ZmluYWxseXtpZihuKWRlbGV0ZSByW3RdfXJldHVybiBhLmV4cG9ydHN9X19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7cmV0dXJuIF9fbmNjd3Bja19yZXF1aXJlX18oODk5KX0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/content-type/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("module.exports=(()=>{\"use strict\";var e={583:(e,r)=>{r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var c=f.substr(0,u).trim();var v=f.substr(++u,f.length).trim();if('\"'==v[0]){v=v.slice(1,-1)}if(undefined==t[c]){t[c]=tryDecode(v,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}}};var r={};function __nccwpck_require__(i){if(r[i]){return r[i].exports}var t=r[i]={exports:{}};var a=true;try{e[i](t,t.exports,__nccwpck_require__);a=false}finally{if(a)delete r[i]}return t.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(583)})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nvb2tpZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsYUFBYSxPQUFPLFlBQVksY0FBYyxzQkFBc0IseUJBQXlCLHlCQUF5QixTQUFTLEdBQUcsOENBQThDLG9CQUFvQix3QkFBd0IscURBQXFELFNBQVMsWUFBWSxpQkFBaUIsa0JBQWtCLFlBQVksV0FBVyxLQUFLLFdBQVcscUJBQXFCLFFBQVEsU0FBUywyQkFBMkIsb0NBQW9DLGNBQWMsZ0JBQWdCLG9CQUFvQixxQkFBcUIsU0FBUywwQkFBMEIsWUFBWSxrQkFBa0IsMEJBQTBCLGdEQUFnRCxlQUFlLGdEQUFnRCxXQUFXLGtCQUFrQiwrQ0FBK0MsY0FBYyxtQkFBbUIsaUJBQWlCLDJCQUEyQixnREFBZ0QsTUFBTSx3QkFBd0IsYUFBYSxzQkFBc0IsZ0RBQWdELE1BQU0sa0JBQWtCLFdBQVcsb0JBQW9CLDhDQUE4QyxNQUFNLGNBQWMsY0FBYyw4Q0FBOEMsaURBQWlELE1BQU0sa0NBQWtDLGVBQWUsTUFBTSxVQUFVLGFBQWEsTUFBTSxRQUFRLGVBQWUsdUVBQXVFLFVBQVUsZ0JBQWdCLGlCQUFpQixNQUFNLGdCQUFnQixjQUFjLE1BQU0sbUJBQW1CLGlCQUFpQixNQUFNLGlCQUFpQixlQUFlLE1BQU0sMkRBQTJELFNBQVMsd0JBQXdCLElBQUksWUFBWSxTQUFTLGFBQWEsU0FBUyxnQ0FBZ0MsU0FBUyxvQkFBb0IsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIscUNBQXFDLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2tvbGxla3RpdmV0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanM/NDhkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz0oKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZT17NTgzOihlLHIpPT57ci5wYXJzZT1wYXJzZTtyLnNlcmlhbGl6ZT1zZXJpYWxpemU7dmFyIGk9ZGVjb2RlVVJJQ29tcG9uZW50O3ZhciB0PWVuY29kZVVSSUNvbXBvbmVudDt2YXIgYT0vOyAqLzt2YXIgbj0vXltcXHUwMDA5XFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskLztmdW5jdGlvbiBwYXJzZShlLHIpe2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHN0ciBtdXN0IGJlIGEgc3RyaW5nXCIpfXZhciB0PXt9O3ZhciBuPXJ8fHt9O3ZhciBvPWUuc3BsaXQoYSk7dmFyIHM9bi5kZWNvZGV8fGk7Zm9yKHZhciBwPTA7cDxvLmxlbmd0aDtwKyspe3ZhciBmPW9bcF07dmFyIHU9Zi5pbmRleE9mKFwiPVwiKTtpZih1PDApe2NvbnRpbnVlfXZhciBjPWYuc3Vic3RyKDAsdSkudHJpbSgpO3ZhciB2PWYuc3Vic3RyKCsrdSxmLmxlbmd0aCkudHJpbSgpO2lmKCdcIic9PXZbMF0pe3Y9di5zbGljZSgxLC0xKX1pZih1bmRlZmluZWQ9PXRbY10pe3RbY109dHJ5RGVjb2RlKHYscyl9fXJldHVybiB0fWZ1bmN0aW9uIHNlcmlhbGl6ZShlLHIsaSl7dmFyIGE9aXx8e307dmFyIG89YS5lbmNvZGV8fHQ7aWYodHlwZW9mIG8hPT1cImZ1bmN0aW9uXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZW5jb2RlIGlzIGludmFsaWRcIil9aWYoIW4udGVzdChlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IG5hbWUgaXMgaW52YWxpZFwiKX12YXIgcz1vKHIpO2lmKHMmJiFuLnRlc3Qocykpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCB2YWwgaXMgaW52YWxpZFwiKX12YXIgcD1lK1wiPVwiK3M7aWYobnVsbCE9YS5tYXhBZ2Upe3ZhciBmPWEubWF4QWdlLTA7aWYoaXNOYU4oZil8fCFpc0Zpbml0ZShmKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBtYXhBZ2UgaXMgaW52YWxpZFwiKX1wKz1cIjsgTWF4LUFnZT1cIitNYXRoLmZsb29yKGYpfWlmKGEuZG9tYWluKXtpZighbi50ZXN0KGEuZG9tYWluKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBkb21haW4gaXMgaW52YWxpZFwiKX1wKz1cIjsgRG9tYWluPVwiK2EuZG9tYWlufWlmKGEucGF0aCl7aWYoIW4udGVzdChhLnBhdGgpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIHBhdGggaXMgaW52YWxpZFwiKX1wKz1cIjsgUGF0aD1cIithLnBhdGh9aWYoYS5leHBpcmVzKXtpZih0eXBlb2YgYS5leHBpcmVzLnRvVVRDU3RyaW5nIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGV4cGlyZXMgaXMgaW52YWxpZFwiKX1wKz1cIjsgRXhwaXJlcz1cIithLmV4cGlyZXMudG9VVENTdHJpbmcoKX1pZihhLmh0dHBPbmx5KXtwKz1cIjsgSHR0cE9ubHlcIn1pZihhLnNlY3VyZSl7cCs9XCI7IFNlY3VyZVwifWlmKGEuc2FtZVNpdGUpe3ZhciB1PXR5cGVvZiBhLnNhbWVTaXRlPT09XCJzdHJpbmdcIj9hLnNhbWVTaXRlLnRvTG93ZXJDYXNlKCk6YS5zYW1lU2l0ZTtzd2l0Y2godSl7Y2FzZSB0cnVlOnArPVwiOyBTYW1lU2l0ZT1TdHJpY3RcIjticmVhaztjYXNlXCJsYXhcIjpwKz1cIjsgU2FtZVNpdGU9TGF4XCI7YnJlYWs7Y2FzZVwic3RyaWN0XCI6cCs9XCI7IFNhbWVTaXRlPVN0cmljdFwiO2JyZWFrO2Nhc2VcIm5vbmVcIjpwKz1cIjsgU2FtZVNpdGU9Tm9uZVwiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBzYW1lU2l0ZSBpcyBpbnZhbGlkXCIpfX1yZXR1cm4gcH1mdW5jdGlvbiB0cnlEZWNvZGUoZSxyKXt0cnl7cmV0dXJuIHIoZSl9Y2F0Y2gocil7cmV0dXJuIGV9fX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18oaSl7aWYocltpXSl7cmV0dXJuIHJbaV0uZXhwb3J0c312YXIgdD1yW2ldPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW2ldKHQsdC5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW2ldfXJldHVybiB0LmV4cG9ydHN9X19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7cmV0dXJuIF9fbmNjd3Bja19yZXF1aXJlX18oNTgzKX0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/jsonwebtoken/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/compiled/jsonwebtoken/index.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports=(()=>{var e={68:(e,r,t)=>{\"use strict\";var n=t(293).Buffer;var i=t(293).SlowBuffer;e.exports=bufferEq;function bufferEq(e,r){if(!n.isBuffer(e)||!n.isBuffer(r)){return false}if(e.length!==r.length){return false}var t=0;for(var i=0;i<e.length;i++){t|=e[i]^r[i]}return t===0}bufferEq.install=function(){n.prototype.equal=i.prototype.equal=function equal(e){return bufferEq(this,e)}};var a=n.prototype.equal;var o=i.prototype.equal;bufferEq.restore=function(){n.prototype.equal=a;i.prototype.equal=o}},175:(e,r,t)=>{\"use strict\";var n=t(615).Buffer;var i=t(363);var a=128,o=0,s=32,u=16,f=2,c=u|s|o<<6,p=f|o<<6;function base64Url(e){return e.replace(/=/g,\"\").replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}function signatureAsBuffer(e){if(n.isBuffer(e)){return e}else if(\"string\"===typeof e){return n.from(e,\"base64\")}throw new TypeError(\"ECDSA signature must be a Base64 string or a Buffer\")}function derToJose(e,r){e=signatureAsBuffer(e);var t=i(r);var o=t+1;var s=e.length;var u=0;if(e[u++]!==c){throw new Error('Could not find expected \"seq\"')}var f=e[u++];if(f===(a|1)){f=e[u++]}if(s-u<f){throw new Error('\"seq\" specified length of \"'+f+'\", only \"'+(s-u)+'\" remaining')}if(e[u++]!==p){throw new Error('Could not find expected \"int\" for \"r\"')}var l=e[u++];if(s-u-2<l){throw new Error('\"r\" specified length of \"'+l+'\", only \"'+(s-u-2)+'\" available')}if(o<l){throw new Error('\"r\" specified length of \"'+l+'\", max of \"'+o+'\" is acceptable')}var v=u;u+=l;if(e[u++]!==p){throw new Error('Could not find expected \"int\" for \"s\"')}var y=e[u++];if(s-u!==y){throw new Error('\"s\" specified length of \"'+y+'\", expected \"'+(s-u)+'\"')}if(o<y){throw new Error('\"s\" specified length of \"'+y+'\", max of \"'+o+'\" is acceptable')}var d=u;u+=y;if(u!==s){throw new Error('Expected to consume entire buffer, but \"'+(s-u)+'\" bytes remain')}var b=t-l,h=t-y;var g=n.allocUnsafe(b+l+h+y);for(u=0;u<b;++u){g[u]=0}e.copy(g,u,v+Math.max(-b,0),v+l);u=t;for(var m=u;u<m+h;++u){g[u]=0}e.copy(g,u,d+Math.max(-h,0),d+y);g=g.toString(\"base64\");g=base64Url(g);return g}function countPadding(e,r,t){var n=0;while(r+n<t&&e[r+n]===0){++n}var i=e[r+n]>=a;if(i){--n}return n}function joseToDer(e,r){e=signatureAsBuffer(e);var t=i(r);var o=e.length;if(o!==t*2){throw new TypeError('\"'+r+'\" signatures must be \"'+t*2+'\" bytes, saw \"'+o+'\"')}var s=countPadding(e,0,t);var u=countPadding(e,t,e.length);var f=t-s;var l=t-u;var v=1+1+f+1+1+l;var y=v<a;var d=n.allocUnsafe((y?2:3)+v);var b=0;d[b++]=c;if(y){d[b++]=v}else{d[b++]=a|1;d[b++]=v&255}d[b++]=p;d[b++]=f;if(s<0){d[b++]=0;b+=e.copy(d,b,0,t)}else{b+=e.copy(d,b,s,t)}d[b++]=p;d[b++]=l;if(u<0){d[b++]=0;e.copy(d,b,t)}else{e.copy(d,b,t+u)}return d}e.exports={derToJose:derToJose,joseToDer:joseToDer}},363:e=>{\"use strict\";function getParamSize(e){var r=(e/8|0)+(e%8===0?0:1);return r}var r={ES256:getParamSize(256),ES384:getParamSize(384),ES512:getParamSize(521)};function getParamBytesForAlg(e){var t=r[e];if(t){return t}throw new Error('Unknown algorithm \"'+e+'\"')}e.exports=getParamBytesForAlg},516:(e,r,t)=>{var n=t(641);e.exports=function(e,r){r=r||{};var t=n.decode(e,r);if(!t){return null}var i=t.payload;if(typeof i===\"string\"){try{var a=JSON.parse(i);if(a!==null&&typeof a===\"object\"){i=a}}catch(e){}}if(r.complete===true){return{header:t.header,payload:i,signature:t.signature}}return i}},667:(e,r,t)=>{e.exports={decode:t(516),verify:t(452),sign:t(596),JsonWebTokenError:t(86),NotBeforeError:t(384),TokenExpiredError:t(874)}},86:e=>{var r=function(e,r){Error.call(this,e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name=\"JsonWebTokenError\";this.message=e;if(r)this.inner=r};r.prototype=Object.create(Error.prototype);r.prototype.constructor=r;e.exports=r},384:(e,r,t)=>{var n=t(86);var i=function(e,r){n.call(this,e);this.name=\"NotBeforeError\";this.date=r};i.prototype=Object.create(n.prototype);i.prototype.constructor=i;e.exports=i},874:(e,r,t)=>{var n=t(86);var i=function(e,r){n.call(this,e);this.name=\"TokenExpiredError\";this.expiredAt=r};i.prototype=Object.create(n.prototype);i.prototype.constructor=i;e.exports=i},347:(e,r,t)=>{var n=t(519);e.exports=n.satisfies(process.version,\"^6.12.0 || >=8.0.0\")},527:(e,r,t)=>{var n=t(4);e.exports=function(e,r){var t=r||Math.floor(Date.now()/1e3);if(typeof e===\"string\"){var i=n(e);if(typeof i===\"undefined\"){return}return Math.floor(t+i/1e3)}else if(typeof e===\"number\"){return t+e}else{return}}},596:(e,r,t)=>{var n=t(527);var i=t(347);var a=t(641);var o=t(282);var s=t(170);var u=t(117);var f=t(598);var c=t(952);var p=t(95);var l=t(433);var v=[\"RS256\",\"RS384\",\"RS512\",\"ES256\",\"ES384\",\"ES512\",\"HS256\",\"HS384\",\"HS512\",\"none\"];if(i){v.splice(3,0,\"PS256\",\"PS384\",\"PS512\")}var y={expiresIn:{isValid:function(e){return u(e)||p(e)&&e},message:'\"expiresIn\" should be a number of seconds or string representing a timespan'},notBefore:{isValid:function(e){return u(e)||p(e)&&e},message:'\"notBefore\" should be a number of seconds or string representing a timespan'},audience:{isValid:function(e){return p(e)||Array.isArray(e)},message:'\"audience\" must be a string or array'},algorithm:{isValid:o.bind(null,v),message:'\"algorithm\" must be a valid string enum value'},header:{isValid:c,message:'\"header\" must be an object'},encoding:{isValid:p,message:'\"encoding\" must be a string'},issuer:{isValid:p,message:'\"issuer\" must be a string'},subject:{isValid:p,message:'\"subject\" must be a string'},jwtid:{isValid:p,message:'\"jwtid\" must be a string'},noTimestamp:{isValid:s,message:'\"noTimestamp\" must be a boolean'},keyid:{isValid:p,message:'\"keyid\" must be a string'},mutatePayload:{isValid:s,message:'\"mutatePayload\" must be a boolean'}};var d={iat:{isValid:f,message:'\"iat\" should be a number of seconds'},exp:{isValid:f,message:'\"exp\" should be a number of seconds'},nbf:{isValid:f,message:'\"nbf\" should be a number of seconds'}};function validate(e,r,t,n){if(!c(t)){throw new Error('Expected \"'+n+'\" to be a plain object.')}Object.keys(t).forEach(function(i){var a=e[i];if(!a){if(!r){throw new Error('\"'+i+'\" is not allowed in \"'+n+'\"')}return}if(!a.isValid(t[i])){throw new Error(a.message)}})}function validateOptions(e){return validate(y,false,e,\"options\")}function validatePayload(e){return validate(d,true,e,\"payload\")}var b={audience:\"aud\",issuer:\"iss\",subject:\"sub\",jwtid:\"jti\"};var h=[\"expiresIn\",\"notBefore\",\"noTimestamp\",\"audience\",\"issuer\",\"subject\",\"jwtid\"];e.exports=function(e,r,t,i){if(typeof t===\"function\"){i=t;t={}}else{t=t||{}}var o=typeof e===\"object\"&&!Buffer.isBuffer(e);var s=Object.assign({alg:t.algorithm||\"HS256\",typ:o?\"JWT\":undefined,kid:t.keyid},t.header);function failure(e){if(i){return i(e)}throw e}if(!r&&t.algorithm!==\"none\"){return failure(new Error(\"secretOrPrivateKey must have a value\"))}if(typeof e===\"undefined\"){return failure(new Error(\"payload is required\"))}else if(o){try{validatePayload(e)}catch(e){return failure(e)}if(!t.mutatePayload){e=Object.assign({},e)}}else{var u=h.filter(function(e){return typeof t[e]!==\"undefined\"});if(u.length>0){return failure(new Error(\"invalid \"+u.join(\",\")+\" option for \"+typeof e+\" payload\"))}}if(typeof e.exp!==\"undefined\"&&typeof t.expiresIn!==\"undefined\"){return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'))}if(typeof e.nbf!==\"undefined\"&&typeof t.notBefore!==\"undefined\"){return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'))}try{validateOptions(t)}catch(e){return failure(e)}var f=e.iat||Math.floor(Date.now()/1e3);if(t.noTimestamp){delete e.iat}else if(o){e.iat=f}if(typeof t.notBefore!==\"undefined\"){try{e.nbf=n(t.notBefore,f)}catch(e){return failure(e)}if(typeof e.nbf===\"undefined\"){return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'))}}if(typeof t.expiresIn!==\"undefined\"&&typeof e===\"object\"){try{e.exp=n(t.expiresIn,f)}catch(e){return failure(e)}if(typeof e.exp===\"undefined\"){return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'))}}Object.keys(b).forEach(function(r){var n=b[r];if(typeof t[r]!==\"undefined\"){if(typeof e[n]!==\"undefined\"){return failure(new Error('Bad \"options.'+r+'\" option. The payload already has an \"'+n+'\" property.'))}e[n]=t[r]}});var c=t.encoding||\"utf8\";if(typeof i===\"function\"){i=i&&l(i);a.createSign({header:s,privateKey:r,payload:e,encoding:c}).once(\"error\",i).once(\"done\",function(e){i(null,e)})}else{return a.sign({header:s,payload:e,secret:r,encoding:c})}}},452:(e,r,t)=>{var n=t(86);var i=t(384);var a=t(874);var o=t(516);var s=t(527);var u=t(347);var f=t(641);var c=[\"RS256\",\"RS384\",\"RS512\",\"ES256\",\"ES384\",\"ES512\"];var p=[\"RS256\",\"RS384\",\"RS512\"];var l=[\"HS256\",\"HS384\",\"HS512\"];if(u){c.splice(3,0,\"PS256\",\"PS384\",\"PS512\");p.splice(3,0,\"PS256\",\"PS384\",\"PS512\")}e.exports=function(e,r,t,u){if(typeof t===\"function\"&&!u){u=t;t={}}if(!t){t={}}t=Object.assign({},t);var v;if(u){v=u}else{v=function(e,r){if(e)throw e;return r}}if(t.clockTimestamp&&typeof t.clockTimestamp!==\"number\"){return v(new n(\"clockTimestamp must be a number\"))}if(t.nonce!==undefined&&(typeof t.nonce!==\"string\"||t.nonce.trim()===\"\")){return v(new n(\"nonce must be a non-empty string\"))}var y=t.clockTimestamp||Math.floor(Date.now()/1e3);if(!e){return v(new n(\"jwt must be provided\"))}if(typeof e!==\"string\"){return v(new n(\"jwt must be a string\"))}var d=e.split(\".\");if(d.length!==3){return v(new n(\"jwt malformed\"))}var b;try{b=o(e,{complete:true})}catch(e){return v(e)}if(!b){return v(new n(\"invalid token\"))}var h=b.header;var g;if(typeof r===\"function\"){if(!u){return v(new n(\"verify must be called asynchronous if secret or public key is provided as a callback\"))}g=r}else{g=function(e,t){return t(null,r)}}return g(h,function(r,o){if(r){return v(new n(\"error in secret or public key callback: \"+r.message))}var u=d[2].trim()!==\"\";if(!u&&o){return v(new n(\"jwt signature is required\"))}if(u&&!o){return v(new n(\"secret or public key must be provided\"))}if(!u&&!t.algorithms){t.algorithms=[\"none\"]}if(!t.algorithms){t.algorithms=~o.toString().indexOf(\"BEGIN CERTIFICATE\")||~o.toString().indexOf(\"BEGIN PUBLIC KEY\")?c:~o.toString().indexOf(\"BEGIN RSA PUBLIC KEY\")?p:l}if(!~t.algorithms.indexOf(b.header.alg)){return v(new n(\"invalid algorithm\"))}var g;try{g=f.verify(e,b.header.alg,o)}catch(e){return v(e)}if(!g){return v(new n(\"invalid signature\"))}var m=b.payload;if(typeof m.nbf!==\"undefined\"&&!t.ignoreNotBefore){if(typeof m.nbf!==\"number\"){return v(new n(\"invalid nbf value\"))}if(m.nbf>y+(t.clockTolerance||0)){return v(new i(\"jwt not active\",new Date(m.nbf*1e3)))}}if(typeof m.exp!==\"undefined\"&&!t.ignoreExpiration){if(typeof m.exp!==\"number\"){return v(new n(\"invalid exp value\"))}if(y>=m.exp+(t.clockTolerance||0)){return v(new a(\"jwt expired\",new Date(m.exp*1e3)))}}if(t.audience){var S=Array.isArray(t.audience)?t.audience:[t.audience];var w=Array.isArray(m.aud)?m.aud:[m.aud];var j=w.some(function(e){return S.some(function(r){return r instanceof RegExp?r.test(e):r===e})});if(!j){return v(new n(\"jwt audience invalid. expected: \"+S.join(\" or \")))}}if(t.issuer){var x=typeof t.issuer===\"string\"&&m.iss!==t.issuer||Array.isArray(t.issuer)&&t.issuer.indexOf(m.iss)===-1;if(x){return v(new n(\"jwt issuer invalid. expected: \"+t.issuer))}}if(t.subject){if(m.sub!==t.subject){return v(new n(\"jwt subject invalid. expected: \"+t.subject))}}if(t.jwtid){if(m.jti!==t.jwtid){return v(new n(\"jwt jwtid invalid. expected: \"+t.jwtid))}}if(t.nonce){if(m.nonce!==t.nonce){return v(new n(\"jwt nonce invalid. expected: \"+t.nonce))}}if(t.maxAge){if(typeof m.iat!==\"number\"){return v(new n(\"iat required when maxAge is specified\"))}var E=s(t.maxAge,m.iat);if(typeof E===\"undefined\"){return v(new n('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'))}if(y>=E+(t.clockTolerance||0)){return v(new a(\"maxAge exceeded\",new Date(E*1e3)))}}if(t.complete===true){var O=b.signature;return v(null,{header:h,payload:m,signature:O})}return v(null,m)})}},350:(e,r,t)=>{var n=t(68);var i=t(615).Buffer;var a=t(417);var o=t(175);var s=t(669);var u='\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".';var f=\"secret must be a string or buffer\";var c=\"key must be a string or a buffer\";var p=\"key must be a string, a buffer or an object\";var l=typeof a.createPublicKey===\"function\";if(l){c+=\" or a KeyObject\";f+=\"or a KeyObject\"}function checkIsPublicKey(e){if(i.isBuffer(e)){return}if(typeof e===\"string\"){return}if(!l){throw typeError(c)}if(typeof e!==\"object\"){throw typeError(c)}if(typeof e.type!==\"string\"){throw typeError(c)}if(typeof e.asymmetricKeyType!==\"string\"){throw typeError(c)}if(typeof e.export!==\"function\"){throw typeError(c)}}function checkIsPrivateKey(e){if(i.isBuffer(e)){return}if(typeof e===\"string\"){return}if(typeof e===\"object\"){return}throw typeError(p)}function checkIsSecretKey(e){if(i.isBuffer(e)){return}if(typeof e===\"string\"){return e}if(!l){throw typeError(f)}if(typeof e!==\"object\"){throw typeError(f)}if(e.type!==\"secret\"){throw typeError(f)}if(typeof e.export!==\"function\"){throw typeError(f)}}function fromBase64(e){return e.replace(/=/g,\"\").replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}function toBase64(e){e=e.toString();var r=4-e.length%4;if(r!==4){for(var t=0;t<r;++t){e+=\"=\"}}return e.replace(/\\-/g,\"+\").replace(/_/g,\"/\")}function typeError(e){var r=[].slice.call(arguments,1);var t=s.format.bind(s,e).apply(null,r);return new TypeError(t)}function bufferOrString(e){return i.isBuffer(e)||typeof e===\"string\"}function normalizeInput(e){if(!bufferOrString(e))e=JSON.stringify(e);return e}function createHmacSigner(e){return function sign(r,t){checkIsSecretKey(t);r=normalizeInput(r);var n=a.createHmac(\"sha\"+e,t);var i=(n.update(r),n.digest(\"base64\"));return fromBase64(i)}}function createHmacVerifier(e){return function verify(r,t,a){var o=createHmacSigner(e)(r,a);return n(i.from(t),i.from(o))}}function createKeySigner(e){return function sign(r,t){checkIsPrivateKey(t);r=normalizeInput(r);var n=a.createSign(\"RSA-SHA\"+e);var i=(n.update(r),n.sign(t,\"base64\"));return fromBase64(i)}}function createKeyVerifier(e){return function verify(r,t,n){checkIsPublicKey(n);r=normalizeInput(r);t=toBase64(t);var i=a.createVerify(\"RSA-SHA\"+e);i.update(r);return i.verify(n,t,\"base64\")}}function createPSSKeySigner(e){return function sign(r,t){checkIsPrivateKey(t);r=normalizeInput(r);var n=a.createSign(\"RSA-SHA\"+e);var i=(n.update(r),n.sign({key:t,padding:a.constants.RSA_PKCS1_PSS_PADDING,saltLength:a.constants.RSA_PSS_SALTLEN_DIGEST},\"base64\"));return fromBase64(i)}}function createPSSKeyVerifier(e){return function verify(r,t,n){checkIsPublicKey(n);r=normalizeInput(r);t=toBase64(t);var i=a.createVerify(\"RSA-SHA\"+e);i.update(r);return i.verify({key:n,padding:a.constants.RSA_PKCS1_PSS_PADDING,saltLength:a.constants.RSA_PSS_SALTLEN_DIGEST},t,\"base64\")}}function createECDSASigner(e){var r=createKeySigner(e);return function sign(){var t=r.apply(null,arguments);t=o.derToJose(t,\"ES\"+e);return t}}function createECDSAVerifer(e){var r=createKeyVerifier(e);return function verify(t,n,i){n=o.joseToDer(n,\"ES\"+e).toString(\"base64\");var a=r(t,n,i);return a}}function createNoneSigner(){return function sign(){return\"\"}}function createNoneVerifier(){return function verify(e,r){return r===\"\"}}e.exports=function jwa(e){var r={hs:createHmacSigner,rs:createKeySigner,ps:createPSSKeySigner,es:createECDSASigner,none:createNoneSigner};var t={hs:createHmacVerifier,rs:createKeyVerifier,ps:createPSSKeyVerifier,es:createECDSAVerifer,none:createNoneVerifier};var n=e.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);if(!n)throw typeError(u,e);var i=(n[1]||n[3]).toLowerCase();var a=n[2];return{sign:r[i](a),verify:t[i](a)}}},641:(e,r,t)=>{var n=t(921);var i=t(716);var a=[\"HS256\",\"HS384\",\"HS512\",\"RS256\",\"RS384\",\"RS512\",\"PS256\",\"PS384\",\"PS512\",\"ES256\",\"ES384\",\"ES512\"];r.ALGORITHMS=a;r.sign=n.sign;r.verify=i.verify;r.decode=i.decode;r.isValid=i.isValid;r.createSign=function createSign(e){return new n(e)};r.createVerify=function createVerify(e){return new i(e)}},423:(e,r,t)=>{var n=t(615).Buffer;var i=t(413);var a=t(669);function DataStream(e){this.buffer=null;this.writable=true;this.readable=true;if(!e){this.buffer=n.alloc(0);return this}if(typeof e.pipe===\"function\"){this.buffer=n.alloc(0);e.pipe(this);return this}if(e.length||typeof e===\"object\"){this.buffer=e;this.writable=false;process.nextTick(function(){this.emit(\"end\",e);this.readable=false;this.emit(\"close\")}.bind(this));return this}throw new TypeError(\"Unexpected data type (\"+typeof e+\")\")}a.inherits(DataStream,i);DataStream.prototype.write=function write(e){this.buffer=n.concat([this.buffer,n.from(e)]);this.emit(\"data\",e)};DataStream.prototype.end=function end(e){if(e)this.write(e);this.emit(\"end\",e);this.emit(\"close\");this.writable=false;this.readable=false};e.exports=DataStream},921:(e,r,t)=>{var n=t(615).Buffer;var i=t(423);var a=t(350);var o=t(413);var s=t(29);var u=t(669);function base64url(e,r){return n.from(e,r).toString(\"base64\").replace(/=/g,\"\").replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}function jwsSecuredInput(e,r,t){t=t||\"utf8\";var n=base64url(s(e),\"binary\");var i=base64url(s(r),t);return u.format(\"%s.%s\",n,i)}function jwsSign(e){var r=e.header;var t=e.payload;var n=e.secret||e.privateKey;var i=e.encoding;var o=a(r.alg);var s=jwsSecuredInput(r,t,i);var f=o.sign(s,n);return u.format(\"%s.%s\",s,f)}function SignStream(e){var r=e.secret||e.privateKey||e.key;var t=new i(r);this.readable=true;this.header=e.header;this.encoding=e.encoding;this.secret=this.privateKey=this.key=t;this.payload=new i(e.payload);this.secret.once(\"close\",function(){if(!this.payload.writable&&this.readable)this.sign()}.bind(this));this.payload.once(\"close\",function(){if(!this.secret.writable&&this.readable)this.sign()}.bind(this))}u.inherits(SignStream,o);SignStream.prototype.sign=function sign(){try{var e=jwsSign({header:this.header,payload:this.payload.buffer,secret:this.secret.buffer,encoding:this.encoding});this.emit(\"done\",e);this.emit(\"data\",e);this.emit(\"end\");this.readable=false;return e}catch(e){this.readable=false;this.emit(\"error\",e);this.emit(\"close\")}};SignStream.sign=jwsSign;e.exports=SignStream},29:(e,r,t)=>{var n=t(293).Buffer;e.exports=function toString(e){if(typeof e===\"string\")return e;if(typeof e===\"number\"||n.isBuffer(e))return e.toString();return JSON.stringify(e)}},716:(e,r,t)=>{var n=t(615).Buffer;var i=t(423);var a=t(350);var o=t(413);var s=t(29);var u=t(669);var f=/^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;function isObject(e){return Object.prototype.toString.call(e)===\"[object Object]\"}function safeJsonParse(e){if(isObject(e))return e;try{return JSON.parse(e)}catch(e){return undefined}}function headerFromJWS(e){var r=e.split(\".\",1)[0];return safeJsonParse(n.from(r,\"base64\").toString(\"binary\"))}function securedInputFromJWS(e){return e.split(\".\",2).join(\".\")}function signatureFromJWS(e){return e.split(\".\")[2]}function payloadFromJWS(e,r){r=r||\"utf8\";var t=e.split(\".\")[1];return n.from(t,\"base64\").toString(r)}function isValidJws(e){return f.test(e)&&!!headerFromJWS(e)}function jwsVerify(e,r,t){if(!r){var n=new Error(\"Missing algorithm parameter for jws.verify\");n.code=\"MISSING_ALGORITHM\";throw n}e=s(e);var i=signatureFromJWS(e);var o=securedInputFromJWS(e);var u=a(r);return u.verify(o,i,t)}function jwsDecode(e,r){r=r||{};e=s(e);if(!isValidJws(e))return null;var t=headerFromJWS(e);if(!t)return null;var n=payloadFromJWS(e);if(t.typ===\"JWT\"||r.json)n=JSON.parse(n,r.encoding);return{header:t,payload:n,signature:signatureFromJWS(e)}}function VerifyStream(e){e=e||{};var r=e.secret||e.publicKey||e.key;var t=new i(r);this.readable=true;this.algorithm=e.algorithm;this.encoding=e.encoding;this.secret=this.publicKey=this.key=t;this.signature=new i(e.signature);this.secret.once(\"close\",function(){if(!this.signature.writable&&this.readable)this.verify()}.bind(this));this.signature.once(\"close\",function(){if(!this.secret.writable&&this.readable)this.verify()}.bind(this))}u.inherits(VerifyStream,o);VerifyStream.prototype.verify=function verify(){try{var e=jwsVerify(this.signature.buffer,this.algorithm,this.key.buffer);var r=jwsDecode(this.signature.buffer,this.encoding);this.emit(\"done\",e,r);this.emit(\"data\",e);this.emit(\"end\");this.readable=false;return e}catch(e){this.readable=false;this.emit(\"error\",e);this.emit(\"close\")}};VerifyStream.decode=jwsDecode;VerifyStream.isValid=isValidJws;VerifyStream.verify=jwsVerify;e.exports=VerifyStream},282:e=>{var r=1/0,t=9007199254740991,n=1.7976931348623157e308,i=0/0;var a=\"[object Arguments]\",o=\"[object Function]\",s=\"[object GeneratorFunction]\",u=\"[object String]\",f=\"[object Symbol]\";var c=/^\\s+|\\s+$/g;var p=/^[-+]0x[0-9a-f]+$/i;var l=/^0b[01]+$/i;var v=/^0o[0-7]+$/i;var y=/^(?:0|[1-9]\\d*)$/;var d=parseInt;function arrayMap(e,r){var t=-1,n=e?e.length:0,i=Array(n);while(++t<n){i[t]=r(e[t],t,e)}return i}function baseFindIndex(e,r,t,n){var i=e.length,a=t+(n?1:-1);while(n?a--:++a<i){if(r(e[a],a,e)){return a}}return-1}function baseIndexOf(e,r,t){if(r!==r){return baseFindIndex(e,baseIsNaN,t)}var n=t-1,i=e.length;while(++n<i){if(e[n]===r){return n}}return-1}function baseIsNaN(e){return e!==e}function baseTimes(e,r){var t=-1,n=Array(e);while(++t<e){n[t]=r(t)}return n}function baseValues(e,r){return arrayMap(r,function(r){return e[r]})}function overArg(e,r){return function(t){return e(r(t))}}var b=Object.prototype;var h=b.hasOwnProperty;var g=b.toString;var m=b.propertyIsEnumerable;var S=overArg(Object.keys,Object),w=Math.max;function arrayLikeKeys(e,r){var t=j(e)||isArguments(e)?baseTimes(e.length,String):[];var n=t.length,i=!!n;for(var a in e){if((r||h.call(e,a))&&!(i&&(a==\"length\"||isIndex(a,n)))){t.push(a)}}return t}function baseKeys(e){if(!isPrototype(e)){return S(e)}var r=[];for(var t in Object(e)){if(h.call(e,t)&&t!=\"constructor\"){r.push(t)}}return r}function isIndex(e,r){r=r==null?t:r;return!!r&&(typeof e==\"number\"||y.test(e))&&(e>-1&&e%1==0&&e<r)}function isPrototype(e){var r=e&&e.constructor,t=typeof r==\"function\"&&r.prototype||b;return e===t}function includes(e,r,t,n){e=isArrayLike(e)?e:values(e);t=t&&!n?toInteger(t):0;var i=e.length;if(t<0){t=w(i+t,0)}return isString(e)?t<=i&&e.indexOf(r,t)>-1:!!i&&baseIndexOf(e,r,t)>-1}function isArguments(e){return isArrayLikeObject(e)&&h.call(e,\"callee\")&&(!m.call(e,\"callee\")||g.call(e)==a)}var j=Array.isArray;function isArrayLike(e){return e!=null&&isLength(e.length)&&!isFunction(e)}function isArrayLikeObject(e){return isObjectLike(e)&&isArrayLike(e)}function isFunction(e){var r=isObject(e)?g.call(e):\"\";return r==o||r==s}function isLength(e){return typeof e==\"number\"&&e>-1&&e%1==0&&e<=t}function isObject(e){var r=typeof e;return!!e&&(r==\"object\"||r==\"function\")}function isObjectLike(e){return!!e&&typeof e==\"object\"}function isString(e){return typeof e==\"string\"||!j(e)&&isObjectLike(e)&&g.call(e)==u}function isSymbol(e){return typeof e==\"symbol\"||isObjectLike(e)&&g.call(e)==f}function toFinite(e){if(!e){return e===0?e:0}e=toNumber(e);if(e===r||e===-r){var t=e<0?-1:1;return t*n}return e===e?e:0}function toInteger(e){var r=toFinite(e),t=r%1;return r===r?t?r-t:r:0}function toNumber(e){if(typeof e==\"number\"){return e}if(isSymbol(e)){return i}if(isObject(e)){var r=typeof e.valueOf==\"function\"?e.valueOf():e;e=isObject(r)?r+\"\":r}if(typeof e!=\"string\"){return e===0?e:+e}e=e.replace(c,\"\");var t=l.test(e);return t||v.test(e)?d(e.slice(2),t?2:8):p.test(e)?i:+e}function keys(e){return isArrayLike(e)?arrayLikeKeys(e):baseKeys(e)}function values(e){return e?baseValues(e,keys(e)):[]}e.exports=includes},170:e=>{var r=\"[object Boolean]\";var t=Object.prototype;var n=t.toString;function isBoolean(e){return e===true||e===false||isObjectLike(e)&&n.call(e)==r}function isObjectLike(e){return!!e&&typeof e==\"object\"}e.exports=isBoolean},117:e=>{var r=1/0,t=1.7976931348623157e308,n=0/0;var i=\"[object Symbol]\";var a=/^\\s+|\\s+$/g;var o=/^[-+]0x[0-9a-f]+$/i;var s=/^0b[01]+$/i;var u=/^0o[0-7]+$/i;var f=parseInt;var c=Object.prototype;var p=c.toString;function isInteger(e){return typeof e==\"number\"&&e==toInteger(e)}function isObject(e){var r=typeof e;return!!e&&(r==\"object\"||r==\"function\")}function isObjectLike(e){return!!e&&typeof e==\"object\"}function isSymbol(e){return typeof e==\"symbol\"||isObjectLike(e)&&p.call(e)==i}function toFinite(e){if(!e){return e===0?e:0}e=toNumber(e);if(e===r||e===-r){var n=e<0?-1:1;return n*t}return e===e?e:0}function toInteger(e){var r=toFinite(e),t=r%1;return r===r?t?r-t:r:0}function toNumber(e){if(typeof e==\"number\"){return e}if(isSymbol(e)){return n}if(isObject(e)){var r=typeof e.valueOf==\"function\"?e.valueOf():e;e=isObject(r)?r+\"\":r}if(typeof e!=\"string\"){return e===0?e:+e}e=e.replace(a,\"\");var t=s.test(e);return t||u.test(e)?f(e.slice(2),t?2:8):o.test(e)?n:+e}e.exports=isInteger},598:e=>{var r=\"[object Number]\";var t=Object.prototype;var n=t.toString;function isObjectLike(e){return!!e&&typeof e==\"object\"}function isNumber(e){return typeof e==\"number\"||isObjectLike(e)&&n.call(e)==r}e.exports=isNumber},952:e=>{var r=\"[object Object]\";function isHostObject(e){var r=false;if(e!=null&&typeof e.toString!=\"function\"){try{r=!!(e+\"\")}catch(e){}}return r}function overArg(e,r){return function(t){return e(r(t))}}var t=Function.prototype,n=Object.prototype;var i=t.toString;var a=n.hasOwnProperty;var o=i.call(Object);var s=n.toString;var u=overArg(Object.getPrototypeOf,Object);function isObjectLike(e){return!!e&&typeof e==\"object\"}function isPlainObject(e){if(!isObjectLike(e)||s.call(e)!=r||isHostObject(e)){return false}var t=u(e);if(t===null){return true}var n=a.call(t,\"constructor\")&&t.constructor;return typeof n==\"function\"&&n instanceof n&&i.call(n)==o}e.exports=isPlainObject},95:e=>{var r=\"[object String]\";var t=Object.prototype;var n=t.toString;var i=Array.isArray;function isObjectLike(e){return!!e&&typeof e==\"object\"}function isString(e){return typeof e==\"string\"||!i(e)&&isObjectLike(e)&&n.call(e)==r}e.exports=isString},433:e=>{var r=\"Expected a function\";var t=1/0,n=1.7976931348623157e308,i=0/0;var a=\"[object Symbol]\";var o=/^\\s+|\\s+$/g;var s=/^[-+]0x[0-9a-f]+$/i;var u=/^0b[01]+$/i;var f=/^0o[0-7]+$/i;var c=parseInt;var p=Object.prototype;var l=p.toString;function before(e,t){var n;if(typeof t!=\"function\"){throw new TypeError(r)}e=toInteger(e);return function(){if(--e>0){n=t.apply(this,arguments)}if(e<=1){t=undefined}return n}}function once(e){return before(2,e)}function isObject(e){var r=typeof e;return!!e&&(r==\"object\"||r==\"function\")}function isObjectLike(e){return!!e&&typeof e==\"object\"}function isSymbol(e){return typeof e==\"symbol\"||isObjectLike(e)&&l.call(e)==a}function toFinite(e){if(!e){return e===0?e:0}e=toNumber(e);if(e===t||e===-t){var r=e<0?-1:1;return r*n}return e===e?e:0}function toInteger(e){var r=toFinite(e),t=r%1;return r===r?t?r-t:r:0}function toNumber(e){if(typeof e==\"number\"){return e}if(isSymbol(e)){return i}if(isObject(e)){var r=typeof e.valueOf==\"function\"?e.valueOf():e;e=isObject(r)?r+\"\":r}if(typeof e!=\"string\"){return e===0?e:+e}e=e.replace(o,\"\");var t=u.test(e);return t||f.test(e)?c(e.slice(2),t?2:8):s.test(e)?i:+e}e.exports=once},4:e=>{var r=1e3;var t=r*60;var n=t*60;var i=n*24;var a=i*7;var o=i*365.25;e.exports=function(e,r){r=r||{};var t=typeof e;if(t===\"string\"&&e.length>0){return parse(e)}else if(t===\"number\"&&isFinite(e)){return r.long?fmtLong(e):fmtShort(e)}throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))};function parse(e){e=String(e);if(e.length>100){return}var s=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!s){return}var u=parseFloat(s[1]);var f=(s[2]||\"ms\").toLowerCase();switch(f){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return u*o;case\"weeks\":case\"week\":case\"w\":return u*a;case\"days\":case\"day\":case\"d\":return u*i;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return u*n;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return u*t;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return u*r;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return u;default:return undefined}}function fmtShort(e){var a=Math.abs(e);if(a>=i){return Math.round(e/i)+\"d\"}if(a>=n){return Math.round(e/n)+\"h\"}if(a>=t){return Math.round(e/t)+\"m\"}if(a>=r){return Math.round(e/r)+\"s\"}return e+\"ms\"}function fmtLong(e){var a=Math.abs(e);if(a>=i){return plural(e,a,i,\"day\")}if(a>=n){return plural(e,a,n,\"hour\")}if(a>=t){return plural(e,a,t,\"minute\")}if(a>=r){return plural(e,a,r,\"second\")}return e+\" ms\"}function plural(e,r,t,n){var i=r>=t*1.5;return Math.round(e/t)+\" \"+n+(i?\"s\":\"\")}},615:(e,r,t)=>{var n=t(293);var i=n.Buffer;function copyProps(e,r){for(var t in e){r[t]=e[t]}}if(i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow){e.exports=n}else{copyProps(n,r);r.Buffer=SafeBuffer}function SafeBuffer(e,r,t){return i(e,r,t)}SafeBuffer.prototype=Object.create(i.prototype);copyProps(i,SafeBuffer);SafeBuffer.from=function(e,r,t){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return i(e,r,t)};SafeBuffer.alloc=function(e,r,t){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var n=i(e);if(r!==undefined){if(typeof t===\"string\"){n.fill(r,t)}else{n.fill(r)}}else{n.fill(0)}return n};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n.SlowBuffer(e)}},293:e=>{\"use strict\";e.exports=__webpack_require__(/*! buffer */ \"buffer\")},417:e=>{\"use strict\";e.exports=__webpack_require__(/*! crypto */ \"crypto\")},519:e=>{\"use strict\";e.exports=__webpack_require__(/*! next/dist/compiled/semver */ \"./node_modules/next/dist/compiled/semver/index.js\")},413:e=>{\"use strict\";e.exports=__webpack_require__(/*! stream */ \"stream\")},669:e=>{\"use strict\";e.exports=__webpack_require__(/*! util */ \"util\")}};var r={};function __nccwpck_require__(t){if(r[t]){return r[t].exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(667)})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/jsonwebtoken/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/semver/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/semver/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("module.exports=(()=>{var e={532:(e,s,t)=>{const r=Symbol(\"SemVer ANY\");class Comparator{static get ANY(){return r}constructor(e,s){if(!s||typeof s!==\"object\"){s={loose:!!s,includePrerelease:false}}if(e instanceof Comparator){if(e.loose===!!s.loose){return e}else{e=e.value}}a(\"comparator\",e,s);this.options=s;this.loose=!!s.loose;this.parse(e);if(this.semver===r){this.value=\"\"}else{this.value=this.operator+this.semver.version}a(\"comp\",this)}parse(e){const s=this.options.loose?n[o.COMPARATORLOOSE]:n[o.COMPARATOR];const t=e.match(s);if(!t){throw new TypeError(`Invalid comparator: ${e}`)}this.operator=t[1]!==undefined?t[1]:\"\";if(this.operator===\"=\"){this.operator=\"\"}if(!t[2]){this.semver=r}else{this.semver=new l(t[2],this.options.loose)}}toString(){return this.value}test(e){a(\"Comparator.test\",e,this.options.loose);if(this.semver===r||e===r){return true}if(typeof e===\"string\"){try{e=new l(e,this.options)}catch(e){return false}}return i(e,this.operator,this.semver,this.options)}intersects(e,s){if(!(e instanceof Comparator)){throw new TypeError(\"a Comparator is required\")}if(!s||typeof s!==\"object\"){s={loose:!!s,includePrerelease:false}}if(this.operator===\"\"){if(this.value===\"\"){return true}return new c(e.value,s).test(this.value)}else if(e.operator===\"\"){if(e.value===\"\"){return true}return new c(this.value,s).test(e.semver)}const t=(this.operator===\">=\"||this.operator===\">\")&&(e.operator===\">=\"||e.operator===\">\");const r=(this.operator===\"<=\"||this.operator===\"<\")&&(e.operator===\"<=\"||e.operator===\"<\");const n=this.semver.version===e.semver.version;const o=(this.operator===\">=\"||this.operator===\"<=\")&&(e.operator===\">=\"||e.operator===\"<=\");const a=i(this.semver,\"<\",e.semver,s)&&(this.operator===\">=\"||this.operator===\">\")&&(e.operator===\"<=\"||e.operator===\"<\");const l=i(this.semver,\">\",e.semver,s)&&(this.operator===\"<=\"||this.operator===\"<\")&&(e.operator===\">=\"||e.operator===\">\");return t||r||n&&o||a||l}}e.exports=Comparator;const{re:n,t:o}=t(523);const i=t(98);const a=t(427);const l=t(88);const c=t(828)},828:(e,s,t)=>{class Range{constructor(e,s){if(!s||typeof s!==\"object\"){s={loose:!!s,includePrerelease:false}}if(e instanceof Range){if(e.loose===!!s.loose&&e.includePrerelease===!!s.includePrerelease){return e}else{return new Range(e.raw,s)}}if(e instanceof r){this.raw=e.value;this.set=[[e]];this.format();return this}this.options=s;this.loose=!!s.loose;this.includePrerelease=!!s.includePrerelease;this.raw=e;this.set=e.split(/\\s*\\|\\|\\s*/).map(e=>this.parseRange(e.trim())).filter(e=>e.length);if(!this.set.length){throw new TypeError(`Invalid SemVer Range: ${e}`)}this.format()}format(){this.range=this.set.map(e=>{return e.join(\" \").trim()}).join(\"||\").trim();return this.range}toString(){return this.range}parseRange(e){const s=this.options.loose;e=e.trim();const t=s?i[a.HYPHENRANGELOOSE]:i[a.HYPHENRANGE];e=e.replace(t,T(this.options.includePrerelease));n(\"hyphen replace\",e);e=e.replace(i[a.COMPARATORTRIM],l);n(\"comparator trim\",e,i[a.COMPARATORTRIM]);e=e.replace(i[a.TILDETRIM],c);e=e.replace(i[a.CARETTRIM],E);e=e.split(/\\s+/).join(\" \");const o=s?i[a.COMPARATORLOOSE]:i[a.COMPARATOR];return e.split(\" \").map(e=>u(e,this.options)).join(\" \").split(/\\s+/).map(e=>A(e,this.options)).filter(this.options.loose?e=>!!e.match(o):()=>true).map(e=>new r(e,this.options))}intersects(e,s){if(!(e instanceof Range)){throw new TypeError(\"a Range is required\")}return this.set.some(t=>{return f(t,s)&&e.set.some(e=>{return f(e,s)&&t.every(t=>{return e.every(e=>{return t.intersects(e,s)})})})})}test(e){if(!e){return false}if(typeof e===\"string\"){try{e=new o(e,this.options)}catch(e){return false}}for(let s=0;s<this.set.length;s++){if(S(this.set[s],e,this.options)){return true}}return false}}e.exports=Range;const r=t(532);const n=t(427);const o=t(88);const{re:i,t:a,comparatorTrimReplace:l,tildeTrimReplace:c,caretTrimReplace:E}=t(523);const f=(e,s)=>{let t=true;const r=e.slice();let n=r.pop();while(t&&r.length){t=r.every(e=>{return n.intersects(e,s)});n=r.pop()}return t};const u=(e,s)=>{n(\"comp\",e,s);e=R(e,s);n(\"caret\",e);e=$(e,s);n(\"tildes\",e);e=N(e,s);n(\"xrange\",e);e=L(e,s);n(\"stars\",e);return e};const h=e=>!e||e.toLowerCase()===\"x\"||e===\"*\";const $=(e,s)=>e.trim().split(/\\s+/).map(e=>{return I(e,s)}).join(\" \");const I=(e,s)=>{const t=s.loose?i[a.TILDELOOSE]:i[a.TILDE];return e.replace(t,(s,t,r,o,i)=>{n(\"tilde\",e,s,t,r,o,i);let a;if(h(t)){a=\"\"}else if(h(r)){a=`>=${t}.0.0 <${+t+1}.0.0-0`}else if(h(o)){a=`>=${t}.${r}.0 <${t}.${+r+1}.0-0`}else if(i){n(\"replaceTilde pr\",i);a=`>=${t}.${r}.${o}-${i} <${t}.${+r+1}.0-0`}else{a=`>=${t}.${r}.${o} <${t}.${+r+1}.0-0`}n(\"tilde return\",a);return a})};const R=(e,s)=>e.trim().split(/\\s+/).map(e=>{return p(e,s)}).join(\" \");const p=(e,s)=>{n(\"caret\",e,s);const t=s.loose?i[a.CARETLOOSE]:i[a.CARET];const r=s.includePrerelease?\"-0\":\"\";return e.replace(t,(s,t,o,i,a)=>{n(\"caret\",e,s,t,o,i,a);let l;if(h(t)){l=\"\"}else if(h(o)){l=`>=${t}.0.0${r} <${+t+1}.0.0-0`}else if(h(i)){if(t===\"0\"){l=`>=${t}.${o}.0${r} <${t}.${+o+1}.0-0`}else{l=`>=${t}.${o}.0${r} <${+t+1}.0.0-0`}}else if(a){n(\"replaceCaret pr\",a);if(t===\"0\"){if(o===\"0\"){l=`>=${t}.${o}.${i}-${a} <${t}.${o}.${+i+1}-0`}else{l=`>=${t}.${o}.${i}-${a} <${t}.${+o+1}.0-0`}}else{l=`>=${t}.${o}.${i}-${a} <${+t+1}.0.0-0`}}else{n(\"no pr\");if(t===\"0\"){if(o===\"0\"){l=`>=${t}.${o}.${i}${r} <${t}.${o}.${+i+1}-0`}else{l=`>=${t}.${o}.${i}${r} <${t}.${+o+1}.0-0`}}else{l=`>=${t}.${o}.${i} <${+t+1}.0.0-0`}}n(\"caret return\",l);return l})};const N=(e,s)=>{n(\"replaceXRanges\",e,s);return e.split(/\\s+/).map(e=>{return O(e,s)}).join(\" \")};const O=(e,s)=>{e=e.trim();const t=s.loose?i[a.XRANGELOOSE]:i[a.XRANGE];return e.replace(t,(t,r,o,i,a,l)=>{n(\"xRange\",e,t,r,o,i,a,l);const c=h(o);const E=c||h(i);const f=E||h(a);const u=f;if(r===\"=\"&&u){r=\"\"}l=s.includePrerelease?\"-0\":\"\";if(c){if(r===\">\"||r===\"<\"){t=\"<0.0.0-0\"}else{t=\"*\"}}else if(r&&u){if(E){i=0}a=0;if(r===\">\"){r=\">=\";if(E){o=+o+1;i=0;a=0}else{i=+i+1;a=0}}else if(r===\"<=\"){r=\"<\";if(E){o=+o+1}else{i=+i+1}}if(r===\"<\")l=\"-0\";t=`${r+o}.${i}.${a}${l}`}else if(E){t=`>=${o}.0.0${l} <${+o+1}.0.0-0`}else if(f){t=`>=${o}.${i}.0${l} <${o}.${+i+1}.0-0`}n(\"xRange return\",t);return t})};const L=(e,s)=>{n(\"replaceStars\",e,s);return e.trim().replace(i[a.STAR],\"\")};const A=(e,s)=>{n(\"replaceGTE0\",e,s);return e.trim().replace(i[s.includePrerelease?a.GTE0PRE:a.GTE0],\"\")};const T=e=>(s,t,r,n,o,i,a,l,c,E,f,u,$)=>{if(h(r)){t=\"\"}else if(h(n)){t=`>=${r}.0.0${e?\"-0\":\"\"}`}else if(h(o)){t=`>=${r}.${n}.0${e?\"-0\":\"\"}`}else if(i){t=`>=${t}`}else{t=`>=${t}${e?\"-0\":\"\"}`}if(h(c)){l=\"\"}else if(h(E)){l=`<${+c+1}.0.0-0`}else if(h(f)){l=`<${c}.${+E+1}.0-0`}else if(u){l=`<=${c}.${E}.${f}-${u}`}else if(e){l=`<${c}.${E}.${+f+1}-0`}else{l=`<=${l}`}return`${t} ${l}`.trim()};const S=(e,s,t)=>{for(let t=0;t<e.length;t++){if(!e[t].test(s)){return false}}if(s.prerelease.length&&!t.includePrerelease){for(let t=0;t<e.length;t++){n(e[t].semver);if(e[t].semver===r.ANY){continue}if(e[t].semver.prerelease.length>0){const r=e[t].semver;if(r.major===s.major&&r.minor===s.minor&&r.patch===s.patch){return true}}}return false}return true}},88:(e,s,t)=>{const r=t(427);const{MAX_LENGTH:n,MAX_SAFE_INTEGER:o}=t(293);const{re:i,t:a}=t(523);const{compareIdentifiers:l}=t(463);class SemVer{constructor(e,s){if(!s||typeof s!==\"object\"){s={loose:!!s,includePrerelease:false}}if(e instanceof SemVer){if(e.loose===!!s.loose&&e.includePrerelease===!!s.includePrerelease){return e}else{e=e.version}}else if(typeof e!==\"string\"){throw new TypeError(`Invalid Version: ${e}`)}if(e.length>n){throw new TypeError(`version is longer than ${n} characters`)}r(\"SemVer\",e,s);this.options=s;this.loose=!!s.loose;this.includePrerelease=!!s.includePrerelease;const t=e.trim().match(s.loose?i[a.LOOSE]:i[a.FULL]);if(!t){throw new TypeError(`Invalid Version: ${e}`)}this.raw=e;this.major=+t[1];this.minor=+t[2];this.patch=+t[3];if(this.major>o||this.major<0){throw new TypeError(\"Invalid major version\")}if(this.minor>o||this.minor<0){throw new TypeError(\"Invalid minor version\")}if(this.patch>o||this.patch<0){throw new TypeError(\"Invalid patch version\")}if(!t[4]){this.prerelease=[]}else{this.prerelease=t[4].split(\".\").map(e=>{if(/^[0-9]+$/.test(e)){const s=+e;if(s>=0&&s<o){return s}}return e})}this.build=t[5]?t[5].split(\".\"):[];this.format()}format(){this.version=`${this.major}.${this.minor}.${this.patch}`;if(this.prerelease.length){this.version+=`-${this.prerelease.join(\".\")}`}return this.version}toString(){return this.version}compare(e){r(\"SemVer.compare\",this.version,this.options,e);if(!(e instanceof SemVer)){if(typeof e===\"string\"&&e===this.version){return 0}e=new SemVer(e,this.options)}if(e.version===this.version){return 0}return this.compareMain(e)||this.comparePre(e)}compareMain(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}return l(this.major,e.major)||l(this.minor,e.minor)||l(this.patch,e.patch)}comparePre(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}if(this.prerelease.length&&!e.prerelease.length){return-1}else if(!this.prerelease.length&&e.prerelease.length){return 1}else if(!this.prerelease.length&&!e.prerelease.length){return 0}let s=0;do{const t=this.prerelease[s];const n=e.prerelease[s];r(\"prerelease compare\",s,t,n);if(t===undefined&&n===undefined){return 0}else if(n===undefined){return 1}else if(t===undefined){return-1}else if(t===n){continue}else{return l(t,n)}}while(++s)}compareBuild(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}let s=0;do{const t=this.build[s];const n=e.build[s];r(\"prerelease compare\",s,t,n);if(t===undefined&&n===undefined){return 0}else if(n===undefined){return 1}else if(t===undefined){return-1}else if(t===n){continue}else{return l(t,n)}}while(++s)}inc(e,s){switch(e){case\"premajor\":this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc(\"pre\",s);break;case\"preminor\":this.prerelease.length=0;this.patch=0;this.minor++;this.inc(\"pre\",s);break;case\"prepatch\":this.prerelease.length=0;this.inc(\"patch\",s);this.inc(\"pre\",s);break;case\"prerelease\":if(this.prerelease.length===0){this.inc(\"patch\",s)}this.inc(\"pre\",s);break;case\"major\":if(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++}this.minor=0;this.patch=0;this.prerelease=[];break;case\"minor\":if(this.patch!==0||this.prerelease.length===0){this.minor++}this.patch=0;this.prerelease=[];break;case\"patch\":if(this.prerelease.length===0){this.patch++}this.prerelease=[];break;case\"pre\":if(this.prerelease.length===0){this.prerelease=[0]}else{let e=this.prerelease.length;while(--e>=0){if(typeof this.prerelease[e]===\"number\"){this.prerelease[e]++;e=-2}}if(e===-1){this.prerelease.push(0)}}if(s){if(this.prerelease[0]===s){if(isNaN(this.prerelease[1])){this.prerelease=[s,0]}}else{this.prerelease=[s,0]}}break;default:throw new Error(`invalid increment argument: ${e}`)}this.format();this.raw=this.version;return this}}e.exports=SemVer},848:(e,s,t)=>{const r=t(925);const n=(e,s)=>{const t=r(e.trim().replace(/^[=v]+/,\"\"),s);return t?t.version:null};e.exports=n},98:(e,s,t)=>{const r=t(898);const n=t(17);const o=t(123);const i=t(522);const a=t(194);const l=t(520);const c=(e,s,t,c)=>{switch(s){case\"===\":if(typeof e===\"object\")e=e.version;if(typeof t===\"object\")t=t.version;return e===t;case\"!==\":if(typeof e===\"object\")e=e.version;if(typeof t===\"object\")t=t.version;return e!==t;case\"\":case\"=\":case\"==\":return r(e,t,c);case\"!=\":return n(e,t,c);case\">\":return o(e,t,c);case\">=\":return i(e,t,c);case\"<\":return a(e,t,c);case\"<=\":return l(e,t,c);default:throw new TypeError(`Invalid operator: ${s}`)}};e.exports=c},466:(e,s,t)=>{const r=t(88);const n=t(925);const{re:o,t:i}=t(523);const a=(e,s)=>{if(e instanceof r){return e}if(typeof e===\"number\"){e=String(e)}if(typeof e!==\"string\"){return null}s=s||{};let t=null;if(!s.rtl){t=e.match(o[i.COERCE])}else{let s;while((s=o[i.COERCERTL].exec(e))&&(!t||t.index+t[0].length!==e.length)){if(!t||s.index+s[0].length!==t.index+t[0].length){t=s}o[i.COERCERTL].lastIndex=s.index+s[1].length+s[2].length}o[i.COERCERTL].lastIndex=-1}if(t===null)return null;return n(`${t[2]}.${t[3]||\"0\"}.${t[4]||\"0\"}`,s)};e.exports=a},156:(e,s,t)=>{const r=t(88);const n=(e,s,t)=>{const n=new r(e,t);const o=new r(s,t);return n.compare(o)||n.compareBuild(o)};e.exports=n},804:(e,s,t)=>{const r=t(309);const n=(e,s)=>r(e,s,true);e.exports=n},309:(e,s,t)=>{const r=t(88);const n=(e,s,t)=>new r(e,t).compare(new r(s,t));e.exports=n},297:(e,s,t)=>{const r=t(925);const n=t(898);const o=(e,s)=>{if(n(e,s)){return null}else{const t=r(e);const n=r(s);const o=t.prerelease.length||n.prerelease.length;const i=o?\"pre\":\"\";const a=o?\"prerelease\":\"\";for(const e in t){if(e===\"major\"||e===\"minor\"||e===\"patch\"){if(t[e]!==n[e]){return i+e}}}return a}};e.exports=o},898:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(e,s,t)===0;e.exports=n},123:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(e,s,t)>0;e.exports=n},522:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(e,s,t)>=0;e.exports=n},900:(e,s,t)=>{const r=t(88);const n=(e,s,t,n)=>{if(typeof t===\"string\"){n=t;t=undefined}try{return new r(e,t).inc(s,n).version}catch(e){return null}};e.exports=n},194:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(e,s,t)<0;e.exports=n},520:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(e,s,t)<=0;e.exports=n},688:(e,s,t)=>{const r=t(88);const n=(e,s)=>new r(e,s).major;e.exports=n},447:(e,s,t)=>{const r=t(88);const n=(e,s)=>new r(e,s).minor;e.exports=n},17:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(e,s,t)!==0;e.exports=n},925:(e,s,t)=>{const{MAX_LENGTH:r}=t(293);const{re:n,t:o}=t(523);const i=t(88);const a=(e,s)=>{if(!s||typeof s!==\"object\"){s={loose:!!s,includePrerelease:false}}if(e instanceof i){return e}if(typeof e!==\"string\"){return null}if(e.length>r){return null}const t=s.loose?n[o.LOOSE]:n[o.FULL];if(!t.test(e)){return null}try{return new i(e,s)}catch(e){return null}};e.exports=a},866:(e,s,t)=>{const r=t(88);const n=(e,s)=>new r(e,s).patch;e.exports=n},16:(e,s,t)=>{const r=t(925);const n=(e,s)=>{const t=r(e,s);return t&&t.prerelease.length?t.prerelease:null};e.exports=n},417:(e,s,t)=>{const r=t(309);const n=(e,s,t)=>r(s,e,t);e.exports=n},701:(e,s,t)=>{const r=t(156);const n=(e,s)=>e.sort((e,t)=>r(t,e,s));e.exports=n},55:(e,s,t)=>{const r=t(828);const n=(e,s,t)=>{try{s=new r(s,t)}catch(e){return false}return s.test(e)};e.exports=n},426:(e,s,t)=>{const r=t(156);const n=(e,s)=>e.sort((e,t)=>r(e,t,s));e.exports=n},601:(e,s,t)=>{const r=t(925);const n=(e,s)=>{const t=r(e,s);return t?t.version:null};e.exports=n},383:(e,s,t)=>{const r=t(523);e.exports={re:r.re,src:r.src,tokens:r.t,SEMVER_SPEC_VERSION:t(293).SEMVER_SPEC_VERSION,SemVer:t(88),compareIdentifiers:t(463).compareIdentifiers,rcompareIdentifiers:t(463).rcompareIdentifiers,parse:t(925),valid:t(601),clean:t(848),inc:t(900),diff:t(297),major:t(688),minor:t(447),patch:t(866),prerelease:t(16),compare:t(309),rcompare:t(417),compareLoose:t(804),compareBuild:t(156),sort:t(426),rsort:t(701),gt:t(123),lt:t(194),eq:t(898),neq:t(17),gte:t(522),lte:t(520),cmp:t(98),coerce:t(466),Comparator:t(532),Range:t(828),satisfies:t(55),toComparators:t(706),maxSatisfying:t(579),minSatisfying:t(832),minVersion:t(179),validRange:t(741),outside:t(420),gtr:t(380),ltr:t(323),intersects:t(8),simplifyRange:t(561),subset:t(863)}},293:e=>{const s=\"2.0.0\";const t=256;const r=Number.MAX_SAFE_INTEGER||9007199254740991;const n=16;e.exports={SEMVER_SPEC_VERSION:s,MAX_LENGTH:t,MAX_SAFE_INTEGER:r,MAX_SAFE_COMPONENT_LENGTH:n}},427:e=>{const s=typeof process===\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error(\"SEMVER\",...e):()=>{};e.exports=s},463:e=>{const s=/^[0-9]+$/;const t=(e,t)=>{const r=s.test(e);const n=s.test(t);if(r&&n){e=+e;t=+t}return e===t?0:r&&!n?-1:n&&!r?1:e<t?-1:1};const r=(e,s)=>t(s,e);e.exports={compareIdentifiers:t,rcompareIdentifiers:r}},523:(e,s,t)=>{const{MAX_SAFE_COMPONENT_LENGTH:r}=t(293);const n=t(427);s=e.exports={};const o=s.re=[];const i=s.src=[];const a=s.t={};let l=0;const c=(e,s,t)=>{const r=l++;n(r,s);a[e]=r;i[r]=s;o[r]=new RegExp(s,t?\"g\":undefined)};c(\"NUMERICIDENTIFIER\",\"0|[1-9]\\\\d*\");c(\"NUMERICIDENTIFIERLOOSE\",\"[0-9]+\");c(\"NONNUMERICIDENTIFIER\",\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\");c(\"MAINVERSION\",`(${i[a.NUMERICIDENTIFIER]})\\\\.`+`(${i[a.NUMERICIDENTIFIER]})\\\\.`+`(${i[a.NUMERICIDENTIFIER]})`);c(\"MAINVERSIONLOOSE\",`(${i[a.NUMERICIDENTIFIERLOOSE]})\\\\.`+`(${i[a.NUMERICIDENTIFIERLOOSE]})\\\\.`+`(${i[a.NUMERICIDENTIFIERLOOSE]})`);c(\"PRERELEASEIDENTIFIER\",`(?:${i[a.NUMERICIDENTIFIER]}|${i[a.NONNUMERICIDENTIFIER]})`);c(\"PRERELEASEIDENTIFIERLOOSE\",`(?:${i[a.NUMERICIDENTIFIERLOOSE]}|${i[a.NONNUMERICIDENTIFIER]})`);c(\"PRERELEASE\",`(?:-(${i[a.PRERELEASEIDENTIFIER]}(?:\\\\.${i[a.PRERELEASEIDENTIFIER]})*))`);c(\"PRERELEASELOOSE\",`(?:-?(${i[a.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${i[a.PRERELEASEIDENTIFIERLOOSE]})*))`);c(\"BUILDIDENTIFIER\",\"[0-9A-Za-z-]+\");c(\"BUILD\",`(?:\\\\+(${i[a.BUILDIDENTIFIER]}(?:\\\\.${i[a.BUILDIDENTIFIER]})*))`);c(\"FULLPLAIN\",`v?${i[a.MAINVERSION]}${i[a.PRERELEASE]}?${i[a.BUILD]}?`);c(\"FULL\",`^${i[a.FULLPLAIN]}$`);c(\"LOOSEPLAIN\",`[v=\\\\s]*${i[a.MAINVERSIONLOOSE]}${i[a.PRERELEASELOOSE]}?${i[a.BUILD]}?`);c(\"LOOSE\",`^${i[a.LOOSEPLAIN]}$`);c(\"GTLT\",\"((?:<|>)?=?)\");c(\"XRANGEIDENTIFIERLOOSE\",`${i[a.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);c(\"XRANGEIDENTIFIER\",`${i[a.NUMERICIDENTIFIER]}|x|X|\\\\*`);c(\"XRANGEPLAIN\",`[v=\\\\s]*(${i[a.XRANGEIDENTIFIER]})`+`(?:\\\\.(${i[a.XRANGEIDENTIFIER]})`+`(?:\\\\.(${i[a.XRANGEIDENTIFIER]})`+`(?:${i[a.PRERELEASE]})?${i[a.BUILD]}?`+`)?)?`);c(\"XRANGEPLAINLOOSE\",`[v=\\\\s]*(${i[a.XRANGEIDENTIFIERLOOSE]})`+`(?:\\\\.(${i[a.XRANGEIDENTIFIERLOOSE]})`+`(?:\\\\.(${i[a.XRANGEIDENTIFIERLOOSE]})`+`(?:${i[a.PRERELEASELOOSE]})?${i[a.BUILD]}?`+`)?)?`);c(\"XRANGE\",`^${i[a.GTLT]}\\\\s*${i[a.XRANGEPLAIN]}$`);c(\"XRANGELOOSE\",`^${i[a.GTLT]}\\\\s*${i[a.XRANGEPLAINLOOSE]}$`);c(\"COERCE\",`${\"(^|[^\\\\d])\"+\"(\\\\d{1,\"}${r}})`+`(?:\\\\.(\\\\d{1,${r}}))?`+`(?:\\\\.(\\\\d{1,${r}}))?`+`(?:$|[^\\\\d])`);c(\"COERCERTL\",i[a.COERCE],true);c(\"LONETILDE\",\"(?:~>?)\");c(\"TILDETRIM\",`(\\\\s*)${i[a.LONETILDE]}\\\\s+`,true);s.tildeTrimReplace=\"$1~\";c(\"TILDE\",`^${i[a.LONETILDE]}${i[a.XRANGEPLAIN]}$`);c(\"TILDELOOSE\",`^${i[a.LONETILDE]}${i[a.XRANGEPLAINLOOSE]}$`);c(\"LONECARET\",\"(?:\\\\^)\");c(\"CARETTRIM\",`(\\\\s*)${i[a.LONECARET]}\\\\s+`,true);s.caretTrimReplace=\"$1^\";c(\"CARET\",`^${i[a.LONECARET]}${i[a.XRANGEPLAIN]}$`);c(\"CARETLOOSE\",`^${i[a.LONECARET]}${i[a.XRANGEPLAINLOOSE]}$`);c(\"COMPARATORLOOSE\",`^${i[a.GTLT]}\\\\s*(${i[a.LOOSEPLAIN]})$|^$`);c(\"COMPARATOR\",`^${i[a.GTLT]}\\\\s*(${i[a.FULLPLAIN]})$|^$`);c(\"COMPARATORTRIM\",`(\\\\s*)${i[a.GTLT]}\\\\s*(${i[a.LOOSEPLAIN]}|${i[a.XRANGEPLAIN]})`,true);s.comparatorTrimReplace=\"$1$2$3\";c(\"HYPHENRANGE\",`^\\\\s*(${i[a.XRANGEPLAIN]})`+`\\\\s+-\\\\s+`+`(${i[a.XRANGEPLAIN]})`+`\\\\s*$`);c(\"HYPHENRANGELOOSE\",`^\\\\s*(${i[a.XRANGEPLAINLOOSE]})`+`\\\\s+-\\\\s+`+`(${i[a.XRANGEPLAINLOOSE]})`+`\\\\s*$`);c(\"STAR\",\"(<|>)?=?\\\\s*\\\\*\");c(\"GTE0\",\"^\\\\s*>=\\\\s*0.0.0\\\\s*$\");c(\"GTE0PRE\",\"^\\\\s*>=\\\\s*0.0.0-0\\\\s*$\")},380:(e,s,t)=>{const r=t(420);const n=(e,s,t)=>r(e,s,\">\",t);e.exports=n},8:(e,s,t)=>{const r=t(828);const n=(e,s,t)=>{e=new r(e,t);s=new r(s,t);return e.intersects(s)};e.exports=n},323:(e,s,t)=>{const r=t(420);const n=(e,s,t)=>r(e,s,\"<\",t);e.exports=n},579:(e,s,t)=>{const r=t(88);const n=t(828);const o=(e,s,t)=>{let o=null;let i=null;let a=null;try{a=new n(s,t)}catch(e){return null}e.forEach(e=>{if(a.test(e)){if(!o||i.compare(e)===-1){o=e;i=new r(o,t)}}});return o};e.exports=o},832:(e,s,t)=>{const r=t(88);const n=t(828);const o=(e,s,t)=>{let o=null;let i=null;let a=null;try{a=new n(s,t)}catch(e){return null}e.forEach(e=>{if(a.test(e)){if(!o||i.compare(e)===1){o=e;i=new r(o,t)}}});return o};e.exports=o},179:(e,s,t)=>{const r=t(88);const n=t(828);const o=t(123);const i=(e,s)=>{e=new n(e,s);let t=new r(\"0.0.0\");if(e.test(t)){return t}t=new r(\"0.0.0-0\");if(e.test(t)){return t}t=null;for(let s=0;s<e.set.length;++s){const n=e.set[s];n.forEach(e=>{const s=new r(e.semver.version);switch(e.operator){case\">\":if(s.prerelease.length===0){s.patch++}else{s.prerelease.push(0)}s.raw=s.format();case\"\":case\">=\":if(!t||o(t,s)){t=s}break;case\"<\":case\"<=\":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}})}if(t&&e.test(t)){return t}return null};e.exports=i},420:(e,s,t)=>{const r=t(88);const n=t(532);const{ANY:o}=n;const i=t(828);const a=t(55);const l=t(123);const c=t(194);const E=t(520);const f=t(522);const u=(e,s,t,u)=>{e=new r(e,u);s=new i(s,u);let h,$,I,R,p;switch(t){case\">\":h=l;$=E;I=c;R=\">\";p=\">=\";break;case\"<\":h=c;$=f;I=l;R=\"<\";p=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(a(e,s,u)){return false}for(let t=0;t<s.set.length;++t){const r=s.set[t];let i=null;let a=null;r.forEach(e=>{if(e.semver===o){e=new n(\">=0.0.0\")}i=i||e;a=a||e;if(h(e.semver,i.semver,u)){i=e}else if(I(e.semver,a.semver,u)){a=e}});if(i.operator===R||i.operator===p){return false}if((!a.operator||a.operator===R)&&$(e,a.semver)){return false}else if(a.operator===p&&I(e,a.semver)){return false}}return true};e.exports=u},561:(e,s,t)=>{const r=t(55);const n=t(309);e.exports=((e,s,t)=>{const o=[];let i=null;let a=null;const l=e.sort((e,s)=>n(e,s,t));for(const e of l){const n=r(e,s,t);if(n){a=e;if(!i)i=e}else{if(a){o.push([i,a])}a=null;i=null}}if(i)o.push([i,null]);const c=[];for(const[e,s]of o){if(e===s)c.push(e);else if(!s&&e===l[0])c.push(\"*\");else if(!s)c.push(`>=${e}`);else if(e===l[0])c.push(`<=${s}`);else c.push(`${e} - ${s}`)}const E=c.join(\" || \");const f=typeof s.raw===\"string\"?s.raw:String(s);return E.length<f.length?E:s})},863:(e,s,t)=>{const r=t(828);const{ANY:n}=t(532);const o=t(55);const i=t(309);const a=(e,s,t)=>{e=new r(e,t);s=new r(s,t);let n=false;e:for(const r of e.set){for(const e of s.set){const s=l(r,e,t);n=n||s!==null;if(s)continue e}if(n)return false}return true};const l=(e,s,t)=>{if(e.length===1&&e[0].semver===n)return s.length===1&&s[0].semver===n;const r=new Set;let a,l;for(const s of e){if(s.operator===\">\"||s.operator===\">=\")a=c(a,s,t);else if(s.operator===\"<\"||s.operator===\"<=\")l=E(l,s,t);else r.add(s.semver)}if(r.size>1)return null;let f;if(a&&l){f=i(a.semver,l.semver,t);if(f>0)return null;else if(f===0&&(a.operator!==\">=\"||l.operator!==\"<=\"))return null}for(const e of r){if(a&&!o(e,String(a),t))return null;if(l&&!o(e,String(l),t))return null;for(const r of s){if(!o(e,String(r),t))return false}return true}let u,h;let $,I;for(const e of s){I=I||e.operator===\">\"||e.operator===\">=\";$=$||e.operator===\"<\"||e.operator===\"<=\";if(a){if(e.operator===\">\"||e.operator===\">=\"){u=c(a,e,t);if(u===e)return false}else if(a.operator===\">=\"&&!o(a.semver,String(e),t))return false}if(l){if(e.operator===\"<\"||e.operator===\"<=\"){h=E(l,e,t);if(h===e)return false}else if(l.operator===\"<=\"&&!o(l.semver,String(e),t))return false}if(!e.operator&&(l||a)&&f!==0)return false}if(a&&$&&!l&&f!==0)return false;if(l&&I&&!a&&f!==0)return false;return true};const c=(e,s,t)=>{if(!e)return s;const r=i(e.semver,s.semver,t);return r>0?e:r<0?s:s.operator===\">\"&&e.operator===\">=\"?s:e};const E=(e,s,t)=>{if(!e)return s;const r=i(e.semver,s.semver,t);return r<0?e:r>0?s:s.operator===\"<\"&&e.operator===\"<=\"?s:e};e.exports=a},706:(e,s,t)=>{const r=t(828);const n=(e,s)=>new r(e,s).set.map(e=>e.map(e=>e.value).join(\" \").trim().split(\" \"));e.exports=n},741:(e,s,t)=>{const r=t(828);const n=(e,s)=>{try{return new r(e,s).range||\"*\"}catch(e){return null}};e.exports=n}};var s={};function __nccwpck_require__(t){if(s[t]){return s[t].exports}var r=s[t]={exports:{}};var n=true;try{e[t](r,r.exports,__nccwpck_require__);n=false}finally{if(n)delete s[t]}return r.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(383)})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/semver/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/server/api-utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/server/api-utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.apiResolver = apiResolver;\nexports.parseBody = parseBody;\nexports.getCookieParser = getCookieParser;\nexports.sendStatusCode = sendStatusCode;\nexports.redirect = redirect;\nexports.sendData = sendData;\nexports.sendJson = sendJson;\nexports.tryGetPreviewData = tryGetPreviewData;\nexports.sendError = sendError;\nexports.setLazyProp = setLazyProp;\nexports.SYMBOL_PREVIEW_DATA = void 0;\nvar _contentType = __webpack_require__(/*! next/dist/compiled/content-type */ \"./node_modules/next/dist/compiled/content-type/index.js\");\nvar _rawBody = _interopRequireDefault(__webpack_require__(/*! raw-body */ \"raw-body\"));\nvar _stream = __webpack_require__(/*! stream */ \"stream\");\nvar _utils = __webpack_require__(/*! ../shared/lib/utils */ \"../shared/lib/utils\");\nvar _cryptoUtils = __webpack_require__(/*! ./crypto-utils */ \"./crypto-utils\");\nvar _loadComponents = __webpack_require__(/*! ./load-components */ \"./load-components\");\nvar _sendPayload = __webpack_require__(/*! ./send-payload */ \"./send-payload\");\nvar _etag = _interopRequireDefault(__webpack_require__(/*! etag */ \"etag\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nasync function apiResolver(req, res, query, resolverModule, apiContext, propagateError, dev, page) {\n    const apiReq = req;\n    const apiRes = res;\n    try {\n        var ref, ref1;\n        if (!resolverModule) {\n            res.statusCode = 404;\n            res.end('Not Found');\n            return;\n        }\n        const config = resolverModule.config || {\n        };\n        const bodyParser = ((ref = config.api) === null || ref === void 0 ? void 0 : ref.bodyParser) !== false;\n        const externalResolver = ((ref1 = config.api) === null || ref1 === void 0 ? void 0 : ref1.externalResolver) || false;\n        // Parsing of cookies\n        setLazyProp({\n            req: apiReq\n        }, 'cookies', getCookieParser(req.headers));\n        // Parsing query string\n        apiReq.query = query;\n        // Parsing preview data\n        setLazyProp({\n            req: apiReq\n        }, 'previewData', ()=>tryGetPreviewData(req, res, apiContext)\n        );\n        // Checking if preview mode is enabled\n        setLazyProp({\n            req: apiReq\n        }, 'preview', ()=>apiReq.previewData !== false ? true : undefined\n        );\n        // Parsing of body\n        if (bodyParser && !apiReq.body) {\n            apiReq.body = await parseBody(apiReq, config.api && config.api.bodyParser && config.api.bodyParser.sizeLimit ? config.api.bodyParser.sizeLimit : '1mb');\n        }\n        let contentLength = 0;\n        const writeData = apiRes.write;\n        const endResponse = apiRes.end;\n        apiRes.write = (...args)=>{\n            contentLength += Buffer.byteLength(args[0]);\n            return writeData.apply(apiRes, args);\n        };\n        apiRes.end = (...args)=>{\n            if (args.length && typeof args[0] !== 'function') {\n                contentLength += Buffer.byteLength(args[0]);\n            }\n            if (contentLength >= 4 * 1024 * 1024) {\n                console.warn(`API response for ${req.url} exceeds 4MB. This will cause the request to fail in a future version. https://nextjs.org/docs/messages/api-routes-body-size-limit`);\n            }\n            endResponse.apply(apiRes, args);\n        };\n        apiRes.status = (statusCode)=>sendStatusCode(apiRes, statusCode)\n        ;\n        apiRes.send = (data)=>sendData(apiReq, apiRes, data)\n        ;\n        apiRes.json = (data)=>sendJson(apiRes, data)\n        ;\n        apiRes.redirect = (statusOrUrl, url)=>redirect(apiRes, statusOrUrl, url)\n        ;\n        apiRes.setPreviewData = (data, options = {\n        })=>setPreviewData(apiRes, data, Object.assign({\n            }, apiContext, options))\n        ;\n        apiRes.clearPreviewData = ()=>clearPreviewData(apiRes)\n        ;\n        const resolver = (0, _loadComponents).interopDefault(resolverModule);\n        let wasPiped = false;\n        if (true) {\n            // listen for pipe event and don't show resolve warning\n            res.once('pipe', ()=>wasPiped = true\n            );\n        }\n        // Call API route method\n        await resolver(req, res);\n        if ( true && !externalResolver && !(0, _utils).isResSent(res) && !wasPiped) {\n            console.warn(`API resolved without sending a response for ${req.url}, this may result in stalled requests.`);\n        }\n    } catch (err) {\n        if (err instanceof ApiError) {\n            sendError(apiRes, err.statusCode, err.message);\n        } else {\n            if (dev) {\n                if (err) {\n                    err.page = page;\n                }\n                throw err;\n            }\n            console.error(err);\n            if (propagateError) {\n                throw err;\n            }\n            sendError(apiRes, 500, 'Internal Server Error');\n        }\n    }\n}\nasync function parseBody(req, limit) {\n    let contentType;\n    try {\n        contentType = (0, _contentType).parse(req.headers['content-type'] || 'text/plain');\n    } catch  {\n        contentType = (0, _contentType).parse('text/plain');\n    }\n    const { type , parameters  } = contentType;\n    const encoding = parameters.charset || 'utf-8';\n    let buffer;\n    try {\n        buffer = await (0, _rawBody).default(req, {\n            encoding,\n            limit\n        });\n    } catch (e) {\n        if (e.type === 'entity.too.large') {\n            throw new ApiError(413, `Body exceeded ${limit} limit`);\n        } else {\n            throw new ApiError(400, 'Invalid body');\n        }\n    }\n    const body = buffer.toString();\n    if (type === 'application/json' || type === 'application/ld+json') {\n        return parseJson(body);\n    } else if (type === 'application/x-www-form-urlencoded') {\n        const qs = __webpack_require__(/*! querystring */ \"querystring\");\n        return qs.decode(body);\n    } else {\n        return body;\n    }\n}\n/**\n * Parse `JSON` and handles invalid `JSON` strings\n * @param str `JSON` string\n */ function parseJson(str) {\n    if (str.length === 0) {\n        // special-case empty json body, as it's a common client-side mistake\n        return {\n        };\n    }\n    try {\n        return JSON.parse(str);\n    } catch (e) {\n        throw new ApiError(400, 'Invalid JSON');\n    }\n}\nfunction getCookieParser(headers) {\n    return function parseCookie() {\n        const header = headers.cookie;\n        if (!header) {\n            return {\n            };\n        }\n        const { parse: parseCookieFn  } = __webpack_require__(/*! next/dist/compiled/cookie */ \"./node_modules/next/dist/compiled/cookie/index.js\");\n        return parseCookieFn(Array.isArray(header) ? header.join(';') : header);\n    };\n}\nfunction sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\nfunction redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction sendData(req, res, body) {\n    if (body === null || body === undefined) {\n        res.end();\n        return;\n    }\n    // strip irrelevant headers/body\n    if (res.statusCode === 204 || res.statusCode === 304) {\n        res.removeHeader('Content-Type');\n        res.removeHeader('Content-Length');\n        res.removeHeader('Transfer-Encoding');\n        if ( true && body) {\n            console.warn(`A body was attempted to be set with a 204 statusCode for ${req.url}, this is invalid and the body was ignored.\\n` + `See more info here https://nextjs.org/docs/messages/invalid-api-status-body`);\n        }\n        res.end();\n        return;\n    }\n    const contentType = res.getHeader('Content-Type');\n    if (body instanceof _stream.Stream) {\n        if (!contentType) {\n            res.setHeader('Content-Type', 'application/octet-stream');\n        }\n        body.pipe(res);\n        return;\n    }\n    const isJSONLike = [\n        'object',\n        'number',\n        'boolean'\n    ].includes(typeof body);\n    const stringifiedBody = isJSONLike ? JSON.stringify(body) : body;\n    const etag = (0, _etag).default(stringifiedBody);\n    if ((0, _sendPayload).sendEtagResponse(req, res, etag)) {\n        return;\n    }\n    if (Buffer.isBuffer(body)) {\n        if (!contentType) {\n            res.setHeader('Content-Type', 'application/octet-stream');\n        }\n        res.setHeader('Content-Length', body.length);\n        res.end(body);\n        return;\n    }\n    if (isJSONLike) {\n        res.setHeader('Content-Type', 'application/json; charset=utf-8');\n    }\n    res.setHeader('Content-Length', Buffer.byteLength(stringifiedBody));\n    res.end(stringifiedBody);\n}\nfunction sendJson(res, jsonBody) {\n    // Set header to application/json\n    res.setHeader('Content-Type', 'application/json; charset=utf-8');\n    // Use send to handle request\n    res.send(jsonBody);\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexports.SYMBOL_PREVIEW_DATA = SYMBOL_PREVIEW_DATA;\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction tryGetPreviewData(req, res, options) {\n    // Read cached preview data if present\n    if (SYMBOL_PREVIEW_DATA in req) {\n        return req[SYMBOL_PREVIEW_DATA];\n    }\n    const getCookies = getCookieParser(req.headers);\n    let cookies;\n    try {\n        cookies = getCookies();\n    } catch  {\n        // TODO: warn\n        return false;\n    }\n    const hasBypass = COOKIE_NAME_PRERENDER_BYPASS in cookies;\n    const hasData = COOKIE_NAME_PRERENDER_DATA in cookies;\n    // Case: neither cookie is set.\n    if (!(hasBypass || hasData)) {\n        return false;\n    }\n    // Case: one cookie is set, but not the other.\n    if (hasBypass !== hasData) {\n        clearPreviewData(res);\n        return false;\n    }\n    // Case: preview session is for an old build.\n    if (cookies[COOKIE_NAME_PRERENDER_BYPASS] !== options.previewModeId) {\n        clearPreviewData(res);\n        return false;\n    }\n    const tokenPreviewData = cookies[COOKIE_NAME_PRERENDER_DATA];\n    const jsonwebtoken = __webpack_require__(/*! next/dist/compiled/jsonwebtoken */ \"./node_modules/next/dist/compiled/jsonwebtoken/index.js\");\n    let encryptedPreviewData;\n    try {\n        encryptedPreviewData = jsonwebtoken.verify(tokenPreviewData, options.previewModeSigningKey);\n    } catch  {\n        // TODO: warn\n        clearPreviewData(res);\n        return false;\n    }\n    const decryptedPreviewData = (0, _cryptoUtils).decryptWithSecret(Buffer.from(options.previewModeEncryptionKey), encryptedPreviewData.data);\n    try {\n        // TODO: strict runtime type checking\n        const data = JSON.parse(decryptedPreviewData);\n        // Cache lookup\n        Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n            value: data,\n            enumerable: false\n        });\n        return data;\n    } catch  {\n        return false;\n    }\n}\nfunction isNotValidData(str) {\n    return typeof str !== 'string' || str.length < 16;\n}\nfunction setPreviewData(res, data, options) {\n    if (isNotValidData(options.previewModeId)) {\n        throw new Error('invariant: invalid previewModeId');\n    }\n    if (isNotValidData(options.previewModeEncryptionKey)) {\n        throw new Error('invariant: invalid previewModeEncryptionKey');\n    }\n    if (isNotValidData(options.previewModeSigningKey)) {\n        throw new Error('invariant: invalid previewModeSigningKey');\n    }\n    const jsonwebtoken = __webpack_require__(/*! next/dist/compiled/jsonwebtoken */ \"./node_modules/next/dist/compiled/jsonwebtoken/index.js\");\n    const payload = jsonwebtoken.sign({\n        data: (0, _cryptoUtils).encryptWithSecret(Buffer.from(options.previewModeEncryptionKey), JSON.stringify(data))\n    }, options.previewModeSigningKey, {\n        algorithm: 'HS256',\n        ...options.maxAge !== undefined ? {\n            expiresIn: options.maxAge\n        } : undefined\n    });\n    // limit preview mode cookie to 2KB since we shouldn't store too much\n    // data here and browsers drop cookies over 4KB\n    if (payload.length > 2048) {\n        throw new Error(`Preview data is limited to 2KB currently, reduce how much data you are storing as preview data to continue`);\n    }\n    const { serialize  } = __webpack_require__(/*! next/dist/compiled/cookie */ \"./node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, options.previewModeId, {\n            httpOnly: true,\n            sameSite:  false ? 0 : 'lax',\n            secure: \"development\" !== 'development',\n            path: '/',\n            ...options.maxAge !== undefined ? {\n                maxAge: options.maxAge\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, payload, {\n            httpOnly: true,\n            sameSite:  false ? 0 : 'lax',\n            secure: \"development\" !== 'development',\n            path: '/',\n            ...options.maxAge !== undefined ? {\n                maxAge: options.maxAge\n            } : undefined\n        }), \n    ]);\n    return res;\n}\nfunction clearPreviewData(res) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize  } = __webpack_require__(/*! next/dist/compiled/cookie */ \"./node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : 'lax',\n            secure: \"development\" !== 'development',\n            path: '/'\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : 'lax',\n            secure: \"development\" !== 'development',\n            path: '/'\n        }), \n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\nclass ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\nexports.ApiError = ApiError;\nfunction sendError(res, statusCode1, message1) {\n    res.statusCode = statusCode1;\n    res.statusMessage = message1;\n    res.end(message1);\n}\nfunction setLazyProp({ req  }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=api-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/api-utils.js\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "etag":
/*!***********************!*\
  !*** external "etag" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("etag");

/***/ }),

/***/ "next":
/*!***********************!*\
  !*** external "next" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("next");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/adapters":
/*!*************************************!*\
  !*** external "next-auth/adapters" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-auth/adapters");

/***/ }),

/***/ "next-auth/providers":
/*!**************************************!*\
  !*** external "next-auth/providers" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-auth/providers");

/***/ }),

/***/ "./crypto-utils":
/*!***************************************************!*\
  !*** external "next/dist/server/crypto-utils.js" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/crypto-utils.js");

/***/ }),

/***/ "./load-components":
/*!******************************************************!*\
  !*** external "next/dist/server/load-components.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/load-components.js");

/***/ }),

/***/ "./send-payload":
/*!***************************************************!*\
  !*** external "next/dist/server/send-payload.js" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/send-payload.js");

/***/ }),

/***/ "../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "raw-body":
/*!***************************!*\
  !*** external "raw-body" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("raw-body");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/auth/[...nextauth].js"));
module.exports = __webpack_exports__;

})();